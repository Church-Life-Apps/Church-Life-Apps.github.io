{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/FeedbackForm.tsx","utils/SongUtils.tsx","utils/SecurityUtils.tsx","components/SettingsView.tsx","components/NavigationBar.tsx","pages/HomePage.tsx","components/SearchView.tsx","utils/StringUtils.tsx","service/SongsService.tsx","pages/BookPage.tsx","tracking/GoogleAnalytics.tsx","tracking/EventFunctions.tsx","components/LyricView.tsx","components/MusicView.tsx","utils/PlatformUtils.tsx","pages/SongPage.tsx","App.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","SongViewMode","FeedbackScreen","encryptedtext","privateKey","SERVICE_ID","EMAIL_TEMPLATE","useState","fromWhom","setFromWhom","message","setMessage","feedbackResponseText","setFeedbackResponseText","feedbackResponseModal","setShowFeedbackResponseModal","emailjs","init","CryptoJS","AES","decrypt","toString","enc","Utf8","position","type","value","placeholder","onIonChange","detail","rows","expand","onClick","templateParams","from_name","send","response","console","debug","status","text","error","sendEmail","isOpen","onDidDismiss","clearResponseModal","className","SettingsView","chosenSetting","setChosenSetting","FeedbackForm","color","NavigationBar","props","showSettingsModal","setShowSettingsModal","AppName","slot","backButtonOnClick","icon","homeOutline","RenderBackButton","toggleSongModeOnClick","musicalNotesOutline","swapHorizontalOutline","documentTextOutline","RenderToggleSongModeButton","settingsOutline","HomePage","to","SearchView","bookId","useParams","songCards","setSongCards","songs","entries","songCardsIterator","history","useHistory","length","LoadSongs","onIonInfinite","event","target","disabled","Array","from","complete","loadingSpinner","loadingText","songIterator","count","nextSong","next","done","song","push","GenerateSongCard","key","songNumber","title","author","SHL_RESOURCE_JSON_KEY","shlJsonUrl","PLACEHOLDER_SONG","lyrics","Map","removePunctuation","s","replace","stringSimilarity","require","getSimilarity","word","search","compareTwoStrings","toLowerCase","isNumeric","isNaN","shlSongs","undefined","getOrfetchSongs","a","fetch","json","body","number","JSON","parse","searchString","filter","startsWith","getMatchScore","sort","song1","song2","matchBonus","includes","BookPage","setSearchString","setSongs","useEffect","timeOutId","setTimeout","listSongs","clearTimeout","Event","category","action","label","ReactGA","triggerSongView","mode","String","LyricView","setSong","Lyrics","getSong","class","size","size-lg","size-xl","songLyrics","verseKeys","lyricBlocks","values","i","verseKey","verseLyrics","forEach","line","getLyrics","songsWithTwoTunes","MusicView","num","widthPixels","isPlatform","window","innerWidth","secondTune","setSecondTune","width","setWidth","zoomed","setZoomed","songHasTwoTunes","secondTuneSuffix","url","baseUrl","Music","checked","style","onDoubleClick","src","alt","SongPage","songId","songViewMode","setSongViewMode","initialize","pageview","location","pathname","App","getPlatforms","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"yHAAA,IAAIA,EAAM,CACT,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,oBCxUjB,IAAID,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,2dCZjB,ICgBYgB,EDsEGC,EAtFkB,WAC/B,IEGsBC,EAAuBC,EFDvCC,EAAa,wBACbC,EAAiB,mBAJc,EAMLC,mBAAiB,IANZ,mBAM9BC,EAN8B,KAMpBC,EANoB,OAOPF,mBAAiB,IAPV,mBAO9BG,EAP8B,KAOrBC,EAPqB,OAQmBJ,mBAAiB,IARpC,mBAQ9BK,EAR8B,KAQRC,EARQ,OASyBN,oBAAkB,GAT3C,mBAS9BO,EAT8B,KASPC,EATO,KAarC,OAFAC,IAAQC,MEPcd,EFHI,mEEGmBC,EFFzB,oBEGbc,IAASC,IAAIC,QAAQjB,EAAeC,GAAYiB,SAASH,IAASI,IAAIC,QFS3E,yBAAK3B,GAAG,mBACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU4B,SAAS,YAAnB,QACA,kBAAC,IAAD,CACEC,KAAK,OACLC,MAAOlB,EACPmB,YAAY,kBACZC,YAAa,SAACpC,GAAD,OAAOiB,EAAYjB,EAAEqC,OAAOH,WAG7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUF,SAAS,YAAnB,sBACA,kBAAC,IAAD,CACEM,KAAM,EACNJ,MAAOhB,EACPiB,YAAY,iBACZC,YAAa,SAACpC,GAAD,OAAOmB,EAAWnB,EAAEqC,OAAOH,WAI5C,kBAAC,IAAD,CAAWK,OAAO,OAAOC,QAAS,kBAgBtC,WACE,IAAMC,EAAiB,CACrBC,UAAW1B,EACXE,QAASA,GAEK,KAAZA,GAA+B,KAAbF,EACpBK,EAAwB,mDAExBG,IAAQmB,KAAK9B,EAAYC,EAAgB2B,GAAgB1C,MACvD,SAAU6C,GACRC,QAAQC,MAAM,2BAA4BF,EAASG,OAAQH,EAASI,MACpE3B,EAAwB,8CAE1B,SAAU4B,GACR5B,EAAwB,8BAAD,OAA+B4B,IACtDJ,QAAQI,MAAM,wBAAyBA,MAU7ChC,EAAY,IACZE,EAAW,KANXI,GAA6B,GApCa2B,KAAxC,mBAIA,kBAAC,IAAD,CAAU9C,GAAG,wBAAwB+C,OAAQ7B,EAAuB8B,aAAc,kBAAMC,MACtF,wBAAIC,UAAU,UAAUlC,GACxB,kBAAC,IAAD,CAAWhB,GAAG,2BAA2BoC,QAAS,kBAAMa,MAAxD,QAwCN,SAASA,IACPhC,EAAwB,IACxBE,GAA6B,KGzDlBgC,EA7BgB,WAAO,IAAD,EACOxC,mBAAiB,IADxB,mBAC5ByC,EAD4B,KACbC,EADa,KAGnC,OACE,kBAAC,IAAD,KAGqB,KAAlBD,EACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASpD,GAAG,iBACV,kBAAC,IAAD,kBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWoC,QAAS,kBAAMiB,EAAiB,cAA3C,qBAGF,KAEe,aAAlBD,EAA+B,kBAACE,EAAD,MAAmB,KAEhC,KAAlBF,EACC,kBAAC,IAAD,CAAWG,MAAM,QAAQpB,OAAO,OAAOnC,GAAG,uBAAuBoC,QAAS,kBAAMiB,EAAiB,MAAjG,sBAGE,OC4CKG,EAvDqC,SAACC,GAAU,MAEX9C,oBAAkB,GAFP,mBAEtD+C,EAFsD,KAEnCC,EAFmC,KAI7D,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAU3D,GAAG,WAAW4D,GACxB,kBAAC,IAAD,CAAYC,KAAK,SAoBrB,WACE,IAAKJ,EAAMK,kBACT,OAAO,KAGT,OACE,kBAAC,IAAD,CAAW1B,QAASqB,EAAMK,mBACxB,kBAAC,IAAD,CAASC,KAAMC,OA3BSC,IAC1B,kBAAC,IAAD,CAAYJ,KAAK,WA+BrB,WACE,IAAKJ,EAAMS,sBACT,OAAO,KAGT,OACE,kBAAC,IAAD,CAAWlE,GAAG,kBAAkBoC,QAASqB,EAAMS,uBAC7C,kBAAC,IAAD,CAASH,KAAMI,MACf,kBAAC,IAAD,CAASJ,KAAMK,MACf,kBAAC,IAAD,CAASL,KAAMM,OAvCdC,GAGD,kBAAC,IAAD,CAAWlC,QAAS,kBAAMuB,GAAqB,KAC7C,kBAAC,IAAD,CAASI,KAAMQ,QAKnB,kBAAC,IAAD,CAAUvE,GAAG,gBAAgB+C,OAAQW,EAAmBV,aAAc,kBAAMW,GAAqB,KAC/F,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAW3D,GAAG,uBAAuBoC,QAAS,kBAAMuB,GAAqB,KAAzE,qBChBOa,EAfY,WACzB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAGF,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAUC,GAAG,WCqENC,EAnE+B,SAACjB,GAA4B,IACjEkB,EAAWC,cAAXD,OADgE,EAEtChE,mBAAwB,IAFc,mBAEjEkE,EAFiE,KAEtDC,EAFsD,OAG5CnE,mBAAS8C,EAAMsB,MAAMC,WAA1CC,EAHiE,oBAKlEC,EAAUC,cAKhB,OAHyB,IAArBN,EAAUO,QACZC,EAAUJ,EAAmB,IAExBJ,EAAUO,OAAS,EACxB,6BACE,kBAAC,IAAD,CAASpF,GAAG,sBAAsB6E,GAClC,kBAAC,IAAD,CAAmBS,cAavB,SAAuBC,GACrB,IAAMC,EAASD,EAAMC,OAChBH,EAAUJ,EAAmB,MAChCO,EAAOC,UAAW,GAEpBX,EAAaY,MAAMC,KAAKd,IACxBW,EAAOI,aAlBH,kBAAC,IAAD,CACEC,eAAe,UACfC,YAAY,4BAKlB,kBAAC,IAAD,KACE,kBAAC,IAAD,0BAaJ,SAAST,EAAUU,EAAgDC,GACjE,KAAOA,EAAQ,GAAG,CAChB,IAAMC,EAAWF,EAAaG,OAC9B,GAAID,EAASE,KACX,OAAO,EAET,IAAMC,EAAOH,EAASnE,MAAM,GAC5B+C,EAAUwB,KAAKC,EAAiBF,IAChCJ,IAGF,OAAO,EAGT,SAASM,EAAiBF,GACxB,OACE,kBAAC,IAAD,CACEG,IAAKH,EAAKI,WACVpE,QAAS,WACP8C,EAAQmB,KAAR,WAAiB1B,EAAjB,YAA2ByB,EAAKI,cAElCtD,UAAU,kBAEV,kBAAC,IAAD,KACGkD,EAAKI,WADR,KACsBJ,EAAKK,OAE3B,kBAAC,IAAD,KAAkBL,EAAKM,W,yBL3ElBC,EAAwB,0BAExBC,EACX,mG,SAiBUvG,O,iBAAAA,I,oBAAAA,M,KAiBL,IAAMwG,EAAyB,CAAEJ,MAAO,GAAIC,OAAQ,GAAIF,WAAY,EAAGM,OAAQ,IAAIC,KMtCnF,SAASC,EAAkBC,GAChC,OAAOA,EAAEC,QAAQ,sCAAuC,IAG1D,IAAMC,EAAmBC,EAAQ,KAO1B,SAASC,EAAcC,EAAcC,GAC1C,OAAOJ,EAAiBK,kBAAkBR,EAAkBM,EAAK7F,WAAWgG,eAAgBF,GAMvF,SAASG,EAAUJ,GACxB,OAAQK,OAAOL,GClBjB,IAEIM,OAA+BC,E,SAMpBC,I,2EAAf,gCAAAC,EAAA,8DACmBF,IAAbD,EADN,iCAE2BI,MAAMpB,GAFjC,cAEUpE,EAFV,gBAGuBA,EAASyF,OAHhC,cAGUC,EAHV,OAIUnD,EAAQmD,EAAKvB,GACnBiB,EAAW7C,EACXtC,QAAQC,MAAM,mBANlB,kBAOWqC,GAPX,eASItC,QAAQC,MAAM,2BATlB,kBAUWkF,GAVX,6C,kEAiBO,WAAuBO,GAAvB,eAAAJ,EAAA,sEACeD,IADf,UACC/C,EADD,SAEDoD,EAAS,GAAKA,GAAUpD,EAAMK,QAF7B,yCAGI,CAAEqB,MAAO,GAAIC,OAAQ,GAAIF,YAAa,EAAGM,OAAQsB,KAAKC,MAAM,QAHhE,gCAKItD,EAAMoD,EAAS,IALnB,4C,kEAYA,WAAyBG,GAAzB,eAAAP,EAAA,sEACeD,IADf,UACC/C,EADD,OAEgB,KAAjBuD,EAFC,yCAGIvD,GAHJ,WAIM2C,EAAUY,GAJhB,0CAKIvD,EAAMwD,QAAO,SAACnC,GAAD,OAAUA,EAAKI,WAAW/E,WAAW+G,WAAWF,OALjE,iCAOIvD,EACJwD,QAAO,SAACnC,GAAD,OAAUqC,EAAcrC,EAAMkC,GA7CpB,MA8CjBI,MAAK,SAACC,EAAOC,GAAR,OAAkBH,EAAcG,EAAON,GAAgBG,EAAcE,EAAOL,OATjF,6C,sBAuBP,SAASG,EAAcrC,EAAYkC,GACjC,IAAIO,EAAa,EAIjB,OAHI7B,EAAkBZ,EAAKK,MAAMgB,eAAeqB,SAASR,KACvDO,GAAc,IAETA,EAAaxB,EAAcjB,EAAKK,MAAO6B,GAAgBjB,EAAcjB,EAAKM,OAAQ4B,GC3D3F,IAsCeS,EAtCY,WAAM,MAESpI,mBAAiB,IAF1B,mBAExB2H,EAFwB,KAEVU,EAFU,OAGLrI,mBAAiB,IAHZ,mBAGxBoE,EAHwB,KAGjBkE,EAHiB,KAK/BC,qBAAU,WACR,IAAMC,EAAYC,YAAW,YDyB1B,SAAP,mCCxBMC,CAAUf,GAAc3I,MAAK,SAACoF,GAC5BkE,EAASlE,QAEV,KACH,OAAO,kBAAMuE,aAAaH,MACzB,CAACb,IAEJ,IAAMpD,EAAUC,cAEhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAerB,kBAAmB,kBAAMoB,EAAQmB,KAAK,SAEvD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErG,GAAG,YACH6B,KAAK,SACLC,MAAOwG,EACPvG,YAAY,oBACZC,YAAa,SAACsF,GAAD,OAAU0B,EAAgB1B,EAAKrF,OAAOH,WAIvD,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYyE,IAAK+B,EAAevD,EAAMK,OAAQL,MAAOA,O,QC1BhDwE,EAAQ,SAACC,EAAkBC,EAAgBC,GACtDC,IAAQpE,MAAM,CACZiE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,KCrBJ,SAASE,EAAgBpD,EAAoBqD,GAClD,IACEN,EAAM,cAAD,sBAA+BlJ,EAAawJ,GAA5C,KAAsDrD,EAAW/E,YACtEgB,QAAQC,MAAR,uBAA8BoH,OAAOtD,GAArC,sBAA8DnG,EAAawJ,GAA3E,UACA,MAAOjK,GACP6C,QAAQI,MAAMjD,ICiBlB,IAwEemK,EAxE6B,SAACtG,GAA2B,IAAD,EAC7C9C,mBAAekG,GAD8B,mBAC9DT,EAD8D,KACxD4D,EADwD,KAUrE,OAPAd,qBAAU,WACRU,EAAgBnG,EAAM+C,WAAYnG,EAAa4J,QJI5C,SAAP,kCIHIC,CAAQzG,EAAM+C,YAAY7G,MAAK,SAACyG,GAC9B4D,EAAQ5D,QAET,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ+D,MAAM,8BACZ,kBAAC,IAAD,CAAQC,KAAK,KAAKC,UAAQ,IAAIC,UAAQ,KACpC,kBAAC,IAAD,CAAStK,GAAG,gBAAgBkD,UAAU,eACpC,kBAAC,IAAD,CAAeA,UAAU,mBACvB,kBAAC,IAAD,CAAcqD,IAAI,SAAlB,OAA2BH,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMK,OACjC,kBAAC,IAAD,CAAiBF,IAAI,UAArB,aAAkCH,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMM,SAE1C,kBAAC,IAAD,CAAgBH,IAAI,UAAUH,EAUxC,SAAmBA,GAQjB,IAPA,IAAMU,EAAwB,GAC1BP,EAAM,EAEJgE,EAAanE,EAAKU,OAClB0D,EAAYtK,OAAOD,KAAKsK,GACxBE,EAA0BvK,OAAOwK,OAAOH,GAErCI,EAAI,EAAGA,EAAIH,EAAUpF,SAAUuF,EAAG,CACzC,IAAMC,EAAWJ,EAAUG,GACrBE,EAAcJ,EAAYE,GAEhC7D,EAAOT,KACL,kBAAC,WAAD,CAAUE,IAAKA,KACb,yBAAKrD,UAAU,0BAGnB4D,EAAOT,KACL,wBAAIE,IAAKA,IAAOrD,UAAU,kBACV0H,EAgBjBnD,cACAP,QAAQ,IAAK,UACbA,QAAQ,IAAK,WACbA,QAAQ,IAAK,WACbA,QAAQ,IAAK,iBAjBd2D,EAAYC,SAAQ,SAACC,GACnBjE,EAAOT,KACL,kBAAC,IAAD,CAASE,IAAKA,IAAOrD,UAAU,aAAaK,MAAM,QAChD,2BAAIwH,QAKZ,OAAOjE,EAxCsCkE,CAAU5E,GAAQA,QCpCnE,IAKM6E,EAAoB,CAAC,IAAK,IAAK,IAAK,KAyD3BC,EA/C6B,SAACzH,GAC3C,IZN8B0H,EYMxBC,ECKCC,YAAW,WDLgBC,OAAOC,WAAa,EAAID,OAAOC,WADI,EAEjC5K,oBAAkB,GAFe,mBAE9D6K,EAF8D,KAElDC,EAFkD,OAG3C9K,mBAAiByK,GAH0B,mBAG9DM,EAH8D,KAGvDC,EAHuD,OAIzChL,oBAAkB,GAJuB,mBAI9DiL,EAJ8D,KAItDC,EAJsD,KAM/DC,EAAkBb,EAAkBnC,SAASrF,EAAM+C,YAEnDuF,EAAmBD,GAAmBN,EAAa,KAAO,GAE1DQ,EAAMC,kGZfkBd,EYeqB1H,EAAM+C,YZd/C,GACF,KAAN,OAAY2E,GACHA,EAAM,IACT,IAAN,OAAWA,GAEL,GAAN,OAAUA,IYS2DY,EAvBrD,OA8BlB,OALA7C,qBAAU,WACRU,EAAgBnG,EAAM+C,WAAYnG,EAAa6L,SAC9C,CAACzI,EAAM+C,aAIR,6BAEGsF,GACC,yBAAK9L,GAAG,eACN,kBAAC,IAAD,CAAWmM,QAASX,EAAYxJ,YAAa,kBAAMyJ,GAAeD,OAOtE,yBACEY,MAAO,CAAEV,MAAOA,GAChB1L,GAAG,YACHqM,cAAe,WAEXV,EADEC,EACOR,EACmB,EAAdA,GAChBS,GAAWD,IAEbU,IAAKN,EACLO,IAnDI,oBEoDGC,EA/CY,WAAO,IAyBZhG,EAzBW,EACJ5B,cAAnBD,EADuB,EACvBA,OAAQ8H,EADe,EACfA,OACVvH,EAAUC,cAFe,EAKSxE,mBAAuBN,EAAa6L,OAL7C,mBAKxBQ,EALwB,KAKVC,EALU,KAO/B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACE7I,kBAAmB,WACjBoB,EAAQmB,KAAR,WAAiB1B,KAEnBT,sBAmBR,WACMwI,IAAiBrM,EAAa6L,MAChCS,EAAgBtM,EAAa4J,QAE7B0C,EAAgBtM,EAAa6L,OAE/B,IACE3C,EAAM,cAAe,sBAAuB,mBAC5C,MAAO3J,GACP6C,QAAQI,MAAMjD,QAxBd,kBAAC,IAAD,MAOgB4G,GALDiG,EAMbC,IAAiBrM,EAAa6L,MACzB,kBAAC,EAAD,CAAW1F,WAAYA,IAEvB,kBAAC,EAAD,CAAWA,WAAYA,QClBpC,INtBEmD,IAAQiD,WAHO,kBAOfjD,IAAQkD,SAASvB,OAAOwB,SAASC,SAAWzB,OAAOwB,SAASvF,QAC5D9E,QAAQC,MAAM,eMoBd,MAAO9C,GACP6C,QAAQI,MAAMjD,GAGT,IAAMgE,EAAU,aAgBRoJ,EAdO,WAGpB,OFGAvK,QAAQC,MAAM,sBAAwBuK,eEFpC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW3I,EAAU4I,OAAK,IAC1C,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWpE,EAAUqE,OAAK,IACjD,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWX,EAAUY,OAAK,OCvCjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8586b8f1.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t304,\n\t\t11\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t305,\n\t\t12\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t306,\n\t\t13\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t307,\n\t\t14\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t308,\n\t\t15\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t309,\n\t\t16\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t310,\n\t\t33\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t311,\n\t\t34\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t312,\n\t\t35\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t313,\n\t\t36\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t314,\n\t\t77\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t315,\n\t\t78\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t316,\n\t\t37\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t317,\n\t\t38\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t318,\n\t\t39\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t319,\n\t\t40\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t320,\n\t\t41\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t321,\n\t\t42\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t322,\n\t\t43\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t323,\n\t\t44\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t324,\n\t\t79\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t325,\n\t\t21\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t326,\n\t\t22\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t327,\n\t\t45\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t328,\n\t\t46\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t329,\n\t\t80\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t330,\n\t\t81\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t331,\n\t\t82\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t332,\n\t\t47\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t333,\n\t\t48\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t334,\n\t\t49\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t335,\n\t\t50\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t336,\n\t\t51\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t337,\n\t\t52\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t338,\n\t\t53\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t339,\n\t\t54\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t340,\n\t\t55\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t341,\n\t\t56\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t342,\n\t\t17\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t343,\n\t\t18\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t344,\n\t\t29\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t345,\n\t\t19\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t346,\n\t\t20\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t347,\n\t\t57\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t348,\n\t\t58\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t349,\n\t\t59\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t350,\n\t\t60\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t351,\n\t\t61\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t352,\n\t\t62\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t353,\n\t\t23\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t354,\n\t\t24\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t355,\n\t\t31\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t356,\n\t\t32\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t357,\n\t\t83\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t358,\n\t\t63\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t359,\n\t\t64\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t360,\n\t\t65\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t361,\n\t\t66\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t362,\n\t\t67\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t363,\n\t\t68\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t364,\n\t\t69\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t365,\n\t\t84\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t366,\n\t\t85\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t367,\n\t\t27\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t368,\n\t\t86\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t369,\n\t\t87\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t370,\n\t\t70\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t371,\n\t\t71\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t372,\n\t\t30\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t373,\n\t\t72\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t374,\n\t\t73\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t375,\n\t\t74\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t376,\n\t\t75\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t377,\n\t\t76\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t378,\n\t\t25\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t379,\n\t\t26\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t380,\n\t\t88\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 172;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t382,\n\t\t91\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 174;\nmodule.exports = webpackAsyncContext;","import { IonButton, IonInput, IonItem, IonLabel, IonModal, IonTextarea } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport emailjs from \"emailjs-com\";\nimport { decrypt } from \"../utils/SecurityUtils\";\n\n/**\n * Feedback Screen.\n *\n * Uses EmailJS as a service to send emails.\n * This class will send actual emails when people have feedback.\n */\nconst FeedbackScreen: React.FC = () => {\n  const ENCRYPTED_USER_ID = \"U2FsdGVkX19ijiVnA6XtmJ4wa/RL9NngWwn4uKfq6gO+4ZI/V1F/RCYL4REfk0tZ\";\n  const PRIVATE_KEY = \"jesus private key\";\n  const SERVICE_ID = \"hymnal_app_service_id\";\n  const EMAIL_TEMPLATE = \"template_z4z7bhi\";\n\n  const [fromWhom, setFromWhom] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [feedbackResponseText, setFeedbackResponseText] = useState<string>(\"\");\n  const [feedbackResponseModal, setShowFeedbackResponseModal] = useState<boolean>(false);\n\n  emailjs.init(decrypt(ENCRYPTED_USER_ID, PRIVATE_KEY));\n\n  return (\n    <div id=\"feedbackFormDiv\">\n      <IonItem>\n        <IonLabel position=\"floating\">Name</IonLabel>\n        <IonInput\n          type=\"text\"\n          value={fromWhom}\n          placeholder=\"Enter your name\"\n          onIonChange={(e) => setFromWhom(e.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel position=\"floating\">What do you think?</IonLabel>\n        <IonTextarea\n          rows={7}\n          value={message}\n          placeholder=\"Enter feedback\"\n          onIonChange={(e) => setMessage(e.detail.value as string)}\n        ></IonTextarea>\n      </IonItem>\n\n      <IonButton expand=\"full\" onClick={() => sendEmail()}>\n        Submit Feedback\n      </IonButton>\n\n      <IonModal id=\"feedbackResponseModal\" isOpen={feedbackResponseModal} onDidDismiss={() => clearResponseModal()}>\n        <h1 className=\"center\">{feedbackResponseText}</h1>\n        <IonButton id=\"feedbackResponseOKButton\" onClick={() => clearResponseModal()}>\n          OK\n        </IonButton>\n      </IonModal>\n    </div>\n  );\n\n  /**\n   * Sends an email to the hymnal dev team when someone has feedback.\n   */\n  function sendEmail() {\n    const templateParams = {\n      from_name: fromWhom,\n      message: message,\n    };\n    if (message === \"\" || fromWhom === \"\") {\n      setFeedbackResponseText(\"Please tell us your name and feedback message!\");\n    } else {\n      emailjs.send(SERVICE_ID, EMAIL_TEMPLATE, templateParams).then(\n        function (response) {\n          console.debug(\"Email sent successfully.\", response.status, response.text);\n          setFeedbackResponseText(\"Feedback Submitted Sucessfully, Thanks!\");\n        },\n        function (error) {\n          setFeedbackResponseText(`Error Submitting Feedback: ${error}`);\n          console.error(\"Error sending email: \", error);\n        }\n      );\n      clearForm();\n    }\n    setShowFeedbackResponseModal(true);\n  }\n\n  // Clears form fields.\n  function clearForm() {\n    setFromWhom(\"\");\n    setMessage(\"\");\n  }\n\n  // Clears and hides Response modal.\n  function clearResponseModal() {\n    setFeedbackResponseText(\"\");\n    setShowFeedbackResponseModal(false);\n  }\n};\n\nexport default FeedbackScreen;\n","/**\n * Helpers for Song Related things.\n *\n * Write the helper function here, and then use them by importing it by relative path like:\n *\n * import { makeThreeDigits } from '../utils/SongUtils'\n */\n\nexport const SHL_RESOURCE_JSON_KEY = \"Songs and Hymns of Life\";\n\nexport const shlJsonUrl =\n  \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/metadata/shl.json\";\n\nexport const SHL_BOOK_ID = \"shl\";\n\n/**\n * Prepends 0s onto a 1 or 2 digit number to make it look like a 3 digit number.\n */\nexport function makeThreeDigits(num: number): string {\n  if (num < 10) {\n    return `00${num}`;\n  } else if (num < 100) {\n    return `0${num}`;\n  } else {\n    return `${num}`;\n  }\n}\n\nexport enum SongViewMode {\n  Music,\n  Lyrics,\n}\n\n/**\n * Fields from the shl.json resource file.\n * Add more fields here when they are required in the app.\n */\nexport interface Song {\n  title: string;\n  author: string;\n  songNumber: number;\n  lyrics: Map<string, string[]>;\n}\n\n// Placeholder blank song.\nexport const PLACEHOLDER_SONG: Song = { title: \"\", author: \"\", songNumber: 0, lyrics: new Map() };\n","/**\n * Helper functions for Security stuff.\n */\n\nimport CryptoJS from \"crypto-js\";\n\n/**\n * Uses AES to encrypt some text with the given private key.\n */\nexport function encrypt(normalText: string, privateKey: string): string {\n  return CryptoJS.AES.encrypt(normalText, privateKey).toString();\n}\n\n/**\n * Uses AES to decrypt some text with the given private key.\n */\nexport function decrypt(encryptedtext: string, privateKey: string): string {\n  return CryptoJS.AES.decrypt(encryptedtext, privateKey).toString(CryptoJS.enc.Utf8);\n}\n","import { IonButton, IonContent, IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport FeedbackForm from \"./FeedbackForm\";\n\n/**\n * Settings Page.\n */\nconst SettingsView: React.FC = () => {\n  const [chosenSetting, setChosenSetting] = useState<string>(\"\");\n\n  return (\n    <IonContent>\n      {/* To add another settings item, add another IonItem with an IonLabel. */}\n      {/* TODO: Add Font Size as an option. */}\n      {chosenSetting === \"\" ? (\n        <IonList>\n          <IonItem id=\"settingsTitle\">\n            <IonLabel>Settings</IonLabel>\n          </IonItem>\n          <IonItem>\n            <IonButton onClick={() => setChosenSetting(\"feedback\")}>Submit Feedback</IonButton>\n          </IonItem>\n        </IonList>\n      ) : null}\n\n      {chosenSetting === \"feedback\" ? <FeedbackForm /> : null}\n\n      {chosenSetting !== \"\" ? (\n        <IonButton color=\"light\" expand=\"full\" id=\"backToSettingsButton\" onClick={() => setChosenSetting(\"\")}>\n          Return to Settings\n        </IonButton>\n      ) : null}\n    </IonContent>\n  );\n};\n\nexport default SettingsView;\n","import { IonButton, IonTitle, IonToolbar, IonButtons, IonModal, IonIcon } from \"@ionic/react\";\nimport \"./Components.css\";\nimport {\n  documentTextOutline,\n  homeOutline,\n  musicalNotesOutline,\n  settingsOutline,\n  swapHorizontalOutline,\n} from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport SettingsView from \"../components/SettingsView\";\nimport { AppName } from \"../App\";\n\ninterface NavigationBarProps {\n  backButtonOnClick?: () => void;\n  toggleSongModeOnClick?: () => void;\n}\n\n/**\n * Navigation Bar Component\n */\nconst NavigationBar: React.FC<NavigationBarProps> = (props) => {\n  // whether or not to show settings modal\n  const [showSettingsModal, setShowSettingsModal] = useState<boolean>(false);\n\n  return (\n    <IonToolbar>\n      {/* [eric] we can probably come up with a better name, right? */}\n      <IonTitle id=\"appName\">{AppName}</IonTitle>\n      <IonButtons slot=\"start\">{RenderBackButton()}</IonButtons>\n      <IonButtons slot=\"primary\">\n        {RenderToggleSongModeButton()}\n        {/* TODO: Put this Image/Lyric mode button into settings page. \n          This might require some react magic to get state from a child component */}\n        <IonButton onClick={() => setShowSettingsModal(true)}>\n          <IonIcon icon={settingsOutline} />\n        </IonButton>\n      </IonButtons>\n\n      {/* Settings Menu Popup  */}\n      <IonModal id=\"settingsModal\" isOpen={showSettingsModal} onDidDismiss={() => setShowSettingsModal(false)}>\n        <SettingsView />\n        <IonButton id=\"returnToHymnalButton\" onClick={() => setShowSettingsModal(false)}>\n          Back to Hymnal\n        </IonButton>\n      </IonModal>\n    </IonToolbar>\n  );\n\n  function RenderBackButton() {\n    if (!props.backButtonOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton onClick={props.backButtonOnClick}>\n        <IonIcon icon={homeOutline} />\n      </IonButton>\n    );\n  }\n\n  function RenderToggleSongModeButton() {\n    if (!props.toggleSongModeOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton id=\"songViewToggler\" onClick={props.toggleSongModeOnClick}>\n        <IonIcon icon={musicalNotesOutline} />\n        <IonIcon icon={swapHorizontalOutline} />\n        <IonIcon icon={documentTextOutline} />\n      </IonButton>\n    );\n  }\n};\n\nexport default NavigationBar;\n","import { IonContent, IonPage, IonHeader } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React from \"react\";\nimport { Redirect } from \"react-router\";\n\n/**\n * Home Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst HomePage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar />\n      </IonHeader>\n\n      <IonContent>\n        {/* Redirect to book page until we add more book or make this page functional */}\n        <Redirect to=\"shl\" />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default HomePage;\n","import {\n  IonList,\n  IonCard,\n  IonCardTitle,\n  IonCardSubtitle,\n  IonLabel,\n  IonItem,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Song } from \"../utils/SongUtils\";\nimport \"./Components.css\";\n\ninterface SearchViewProps {\n  songs: Song[];\n}\n\n/**\n * Search View.\n */\nconst SearchView: React.FC<SearchViewProps> = (props: SearchViewProps) => {\n  const { bookId } = useParams<{ bookId: string }>();\n  const [songCards, setSongCards] = useState<JSX.Element[]>([]);\n  const [songCardsIterator] = useState(props.songs.entries());\n\n  const history = useHistory();\n\n  if (songCards.length === 0) {\n    LoadSongs(songCardsIterator, 20);\n  }\n  return songCards.length > 0 ? (\n    <div>\n      <IonList id=\"searchViewSongList\">{songCards}</IonList>\n      <IonInfiniteScroll onIonInfinite={LoadMoreSongs}>\n        <IonInfiniteScrollContent\n          loadingSpinner=\"bubbles\"\n          loadingText=\"Loading more songs...\"\n        ></IonInfiniteScrollContent>\n      </IonInfiniteScroll>\n    </div>\n  ) : (\n    <IonItem>\n      <IonLabel>No results found</IonLabel>\n    </IonItem>\n  );\n\n  function LoadMoreSongs(event: CustomEvent<void>) {\n    const target = event.target as HTMLIonInfiniteScrollElement;\n    if (!LoadSongs(songCardsIterator, 10)) {\n      target.disabled = true;\n    }\n    setSongCards(Array.from(songCards));\n    target.complete();\n  }\n\n  function LoadSongs(songIterator: IterableIterator<[number, Song]>, count: number): boolean {\n    while (count > 0) {\n      const nextSong = songIterator.next();\n      if (nextSong.done) {\n        return false;\n      }\n      const song = nextSong.value[1];\n      songCards.push(GenerateSongCard(song));\n      count--;\n    }\n\n    return true;\n  }\n\n  function GenerateSongCard(song: Song) {\n    return (\n      <IonCard\n        key={song.songNumber}\n        onClick={() => {\n          history.push(`/${bookId}/${song.songNumber}`);\n        }}\n        className=\"hymnalListView\"\n      >\n        <IonCardTitle>\n          {song.songNumber}. {song.title}\n        </IonCardTitle>\n        <IonCardSubtitle>{song.author}</IonCardSubtitle>\n      </IonCard>\n    );\n  }\n};\n\nexport default SearchView;\n","/**\n * Util functions for strings.\n */\n\n/**\n * Removes special characters from the string.\n */\nexport function removePunctuation(s: string): string {\n  return s.replace(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g, \"\");\n}\n\nconst stringSimilarity = require(\"string-similarity\"); // eslint-disable-line @typescript-eslint/no-var-requires\n\n/**\n * Returns a number between 0 and 1 based on how similar two strings are to each other (Case sensitive).\n * 0 = completely different.\n * 1 = the same string.\n */\nexport function getSimilarity(word: string, search: string): number {\n  return stringSimilarity.compareTwoStrings(removePunctuation(word.toString().toLowerCase()), search);\n}\n\n/**\n * Returns true if a string is a number, false otherwise.\n */\nexport function isNumeric(word: string): boolean {\n  return !isNaN(+word);\n}\n","import { shlJsonUrl, SHL_RESOURCE_JSON_KEY, Song } from \"../utils/SongUtils\";\nimport { getSimilarity, isNumeric, removePunctuation } from \"../utils/StringUtils\";\n\n/**\n * File which handles retrieving and searching for songs.\n */\n\n// TODO: Extract values like this to be configurable outside of code so we can tweak on the fly.\nconst MATCH_THRESHOLD = 0.4;\n\nlet shlSongs: Song[] | undefined = undefined;\n\n/**\n * Fetches the lyrics and stores it in memory as a variable.\n * Refreshing the page will cause another fetch.\n */\nasync function getOrfetchSongs(): Promise<Song[]> {\n  if (shlSongs === undefined) {\n    const response = await fetch(shlJsonUrl);\n    const body = await response.json();\n    const songs = body[SHL_RESOURCE_JSON_KEY];\n    shlSongs = songs;\n    console.debug(\"Fetching lyrics\");\n    return songs;\n  } else {\n    console.debug(\"Returning stored lyrics\");\n    return shlSongs;\n  }\n}\n\n/**\n * Retrieves a single song based on song number.\n */\nexport async function getSong(number: number): Promise<Song> {\n  const songs = await getOrfetchSongs();\n  if (number < 0 || number >= songs.length) {\n    return { title: \"\", author: \"\", songNumber: -1, lyrics: JSON.parse(\"{}\") };\n  } else {\n    return songs[number - 1];\n  }\n}\n\n/**\n * Returns a list of songs filtered and sorted by how well they match the given searchString.\n */\nexport async function listSongs(searchString: string): Promise<Song[]> {\n  const songs = await getOrfetchSongs();\n  if (searchString === \"\") {\n    return songs;\n  } else if (isNumeric(searchString)) {\n    return songs.filter((song) => song.songNumber.toString().startsWith(searchString));\n  } else {\n    return songs\n      .filter((song) => getMatchScore(song, searchString) > MATCH_THRESHOLD)\n      .sort((song1, song2) => getMatchScore(song2, searchString) - getMatchScore(song1, searchString));\n  }\n}\n\n/**\n * Returns a number based on how well the song matches the search string.\n *\n * TODO: Improve how we determine matches against title/author.\n * TODO: Enhance this to also include searching through lyrics.\n *\n * Notes:\n * This has to be fast. Optimimzations may include some kind of predefined lookup dictionary,\n * or storing past searches.\n */\nfunction getMatchScore(song: Song, searchString: string): number {\n  let matchBonus = 0;\n  if (removePunctuation(song.title.toLowerCase()).includes(searchString)) {\n    matchBonus += 0.2;\n  }\n  return matchBonus + getSimilarity(song.title, searchString) + getSimilarity(song.author, searchString);\n}\n","import { IonContent, IonPage, IonHeader, IonInput, IonItem } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useEffect, useState } from \"react\";\nimport SearchView from \"../components/SearchView\";\nimport { useHistory } from \"react-router-dom\";\nimport { Song } from \"../utils/SongUtils\";\nimport { listSongs } from \"../service/SongsService\";\n\n/**\n * Book Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst BookPage: React.FC = () => {\n  // the search string inputted by the user\n  const [searchString, setSearchString] = useState<string>(\"\");\n  const [songs, setSongs] = useState<Song[]>([]);\n\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      listSongs(searchString).then((songs) => {\n        setSongs(songs);\n      });\n    }, 200);\n    return () => clearTimeout(timeOutId);\n  }, [searchString]);\n\n  const history = useHistory();\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar backButtonOnClick={() => history.push(\"/\")} />\n      </IonHeader>\n      <IonItem>\n        <IonInput\n          id=\"searchBar\"\n          type=\"search\"\n          value={searchString}\n          placeholder=\"Search for a song\"\n          onIonChange={(word) => setSearchString(word.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n      {/* The key here will trigger a re-initialization of a new searchView when it changes. */}\n      <IonContent>\n        <SearchView key={searchString + songs.length} songs={songs} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default BookPage;\n","import ReactGA from \"react-ga\";\n\nconst StreamID = \"UA-183902236-1\";\n\nexport const initGA = (): void => {\n  ReactGA.initialize(StreamID);\n};\n\nexport const PageView = (): void => {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n  console.debug(\"Page viewed\");\n};\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category\n * @param {string} action\n * @param {string} label\n */\n\nexport const Event = (category: string, action: string, label: string): void => {\n  ReactGA.event({\n    category: category,\n    action: action,\n    label: label,\n  });\n};\n","import { SongViewMode } from \"../utils/SongUtils\";\nimport { Event } from \"./GoogleAnalytics\";\n\nexport function triggerSongView(songNumber: number, mode: SongViewMode): void {\n  try {\n    Event(\"INTERACTION\", `Song viewed(${SongViewMode[mode]})`, songNumber.toString());\n    console.debug(`Song number: ${String(songNumber)} viewed in ${SongViewMode[mode]} mode`);\n  } catch (e) {\n    console.error(e);\n  }\n}\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonCardTitle,\n  IonText,\n  IonCardSubtitle,\n} from \"@ionic/react\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { PLACEHOLDER_SONG, Song, SongViewMode } from \"../utils/SongUtils\";\nimport \"./Components.css\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\nimport { getSong } from \"../service/SongsService\";\n\ninterface LyricViewProps {\n  songNumber: number;\n}\n\n/**\n * Lyric Viewer React Functional Component.\n */\nconst LyricView: React.FC<LyricViewProps> = (props: LyricViewProps) => {\n  const [song, setSong] = useState<Song>(PLACEHOLDER_SONG);\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Lyrics);\n    getSong(props.songNumber).then((song) => {\n      setSong(song);\n    });\n  }, []);\n\n  return (\n    <IonGrid>\n      <IonRow class=\"ion-justify-content-center\">\n        <IonCol size=\"12\" size-lg=\"8\" size-xl=\"6\">\n          <IonCard id=\"lyricViewCard\" className=\"ion-padding\">\n            <IonCardHeader className=\"ion-text-center\">\n              <IonCardTitle key=\"title\">{song?.title}</IonCardTitle>\n              <IonCardSubtitle key=\"author\">By {song?.author}</IonCardSubtitle>\n            </IonCardHeader>\n            <IonCardContent key=\"lyrics\">{song ? getLyrics(song) : song}</IonCardContent>\n          </IonCard>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n\n  /**\n   * Parses all verse of the song to a list of JSX elements.\n   */\n  function getLyrics(song: Song): JSX.Element[] {\n    const lyrics: JSX.Element[] = [];\n    let key = 0;\n\n    const songLyrics = song.lyrics;\n    const verseKeys = Object.keys(songLyrics);\n    const lyricBlocks: string[][] = Object.values(songLyrics);\n\n    for (let i = 0; i < verseKeys.length; ++i) {\n      const verseKey = verseKeys[i];\n      const verseLyrics = lyricBlocks[i];\n\n      lyrics.push(\n        <Fragment key={key++}>\n          <div className=\"ion-margin-vertical\"></div>\n        </Fragment>\n      );\n      lyrics.push(\n        <h5 key={key++} className=\"ion-margin-top\">\n          {getVerseText(verseKey)}\n        </h5>\n      );\n      verseLyrics.forEach((line: string) => {\n        lyrics.push(\n          <IonText key={key++} className=\"lyricVerse\" color=\"dark\">\n            <p>{line}</p>\n          </IonText>\n        );\n      });\n    }\n    return lyrics;\n  }\n\n  function getVerseText(verse: string) {\n    return verse\n      .toLowerCase()\n      .replace(\"v\", \"Verse \")\n      .replace(\"c\", \"Chorus \")\n      .replace(\"b\", \"Bridge \")\n      .replace(\"p\", \"Pre-Chorus \");\n  }\n};\n\nexport default LyricView;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Components.css\";\nimport { makeThreeDigits, SongViewMode } from \"../utils/SongUtils\";\nimport { IonToggle } from \"@ionic/react\";\nimport { isBrowser } from \"../utils/PlatformUtils\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\n\nconst baseUrl = \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/images/\";\nconst hymnalPart = \"shl/SHL_\"; // This part can change when red book is added\nconst imageSuffix = \".png\";\nconst alt = \"No Song Found\";\n\nconst songsWithTwoTunes = [156, 216, 278, 478];\n\n// Props are kind of like the parameters for the constructor of this class.\ninterface MusicViewProps {\n  songNumber: number;\n}\n\n/**\n * Song Viewer React Functional Component.\n */\nconst MusicView: React.FC<MusicViewProps> = (props: MusicViewProps) => {\n  const widthPixels = isBrowser() ? window.innerWidth / 2 : window.innerWidth;\n  const [secondTune, setSecondTune] = useState<boolean>(false);\n  const [width, setWidth] = useState<number>(widthPixels);\n  const [zoomed, setZoomed] = useState<boolean>(false);\n\n  const songHasTwoTunes = songsWithTwoTunes.includes(props.songNumber);\n\n  const secondTuneSuffix = songHasTwoTunes && secondTune ? \"-B\" : \"\";\n\n  const url = baseUrl + hymnalPart + makeThreeDigits(props.songNumber) + secondTuneSuffix + imageSuffix;\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Music);\n  }, [props.songNumber]);\n\n  // TODO: Add Pinch and Zoom to image.\n  return (\n    <div>\n      {/* Second Tune Toggler  */}\n      {songHasTwoTunes && (\n        <div id=\"songToggler\">\n          <IonToggle checked={secondTune} onIonChange={() => setSecondTune(!secondTune)} />\n        </div>\n      )}\n\n      {/* image */}\n      {/* <TransformWrapper>\n        <TransformComponent> */}\n      <img\n        style={{ width: width }}\n        id=\"musicView\"\n        onDoubleClick={() => {\n          if (zoomed) {\n            setWidth(widthPixels);\n          } else setWidth(widthPixels * 2);\n          setZoomed(!zoomed);\n        }}\n        src={url}\n        alt={alt}\n      />\n      {/* </TransformComponent>\n      </TransformWrapper> */}\n    </div>\n  );\n};\n\nexport default MusicView;\n","import { getPlatforms, isPlatform } from \"@ionic/react\";\n\n/**\n * Platform Utils:\n *\n * Android: Current platforms: android,cordova,capacitor,mobile,hybrid\n * iOS:\n * Chrome Mobile Mode: Current platforms: android,tablet,mobile,mobileweb\n * Chrome Regular Desktop: Current platforms: desktop\n */\n\n/**\n * Returns true if this is app currently running on an iOS device.\n */\nexport function isIOS(): boolean {\n  return isPlatform(\"ios\");\n}\n\n/**\n * Returns true if this app is currently running on an Android device.\n */\nexport function isAndroid(): boolean {\n  return isPlatform(\"android\");\n}\n\n/**\n * Returns true if this app is currently running on the desktop.\n */\nexport function isBrowser(): boolean {\n  return isPlatform(\"desktop\");\n}\n\n/**\n * Returns true if the platform supports Cordova.\n *\n * * SQLite requires Cordova.\n */\nexport function isCordova(): boolean {\n  return isPlatform(\"cordova\");\n}\n\nexport function logPlatforms(): void {\n  console.debug(\"Current platforms: \" + getPlatforms());\n}\n","import { IonContent, IonPage, IonHeader } from \"@ionic/react\";\nimport { SongViewMode } from \"../utils/SongUtils\";\nimport LyricView from \"../components/LyricView\";\nimport MusicView from \"../components/MusicView\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n//Import Event tracking\nimport { Event } from \"../tracking/GoogleAnalytics\";\n\n/**\n * Song Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst SongPage: React.FC = () => {\n  const { bookId, songId } = useParams<{ bookId: string; songId: string }>();\n  const history = useHistory();\n\n  // when in song view, use music view or lyrics view\n  const [songViewMode, setSongViewMode] = useState<SongViewMode>(SongViewMode.Music);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar\n          backButtonOnClick={() => {\n            history.push(`/${bookId}`);\n          }}\n          toggleSongModeOnClick={ToggleSongMode}\n        />\n      </IonHeader>\n\n      <IonContent>\n        {/* TODO: Add error handling in case of non number song Id */}\n        {RenderSong(+songId)}\n      </IonContent>\n    </IonPage>\n  );\n\n  function RenderSong(songNumber: number) {\n    if (songViewMode === SongViewMode.Music) {\n      return <MusicView songNumber={songNumber} />;\n    } else {\n      return <LyricView songNumber={songNumber} />;\n    }\n  }\n\n  function ToggleSongMode() {\n    if (songViewMode === SongViewMode.Music) {\n      setSongViewMode(SongViewMode.Lyrics);\n    } else {\n      setSongViewMode(SongViewMode.Music);\n    }\n    try {\n      Event(\"INTERACTION\", \"Songmode is toggled\", \"SongMode_Toggle\");\n    } catch (e) {\n      console.error(e);\n    }\n  }\n};\n\nexport default SongPage;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\nimport HomePage from \"./pages/HomePage\";\nimport BookPage from \"./pages/BookPage\";\nimport SongPage from \"./pages/SongPage\";\nimport { initGA, PageView } from \"./tracking/GoogleAnalytics\";\nimport { logPlatforms } from \"./utils/PlatformUtils\";\n\ntry {\n  initGA();\n  PageView();\n} catch (e) {\n  console.error(e);\n}\n\nexport const AppName = \"Hymnal App\";\n\nconst App: React.FC = () => {\n  logPlatforms();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/:bookId\" component={BookPage} exact />\n        <Route path=\"/:bookId/:songId\" component={SongPage} exact />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}