{"version":3,"sources":["utils/SongUtils.tsx","components/FeedbackForm.tsx","components/SettingsView.tsx","components/NavigationBar.tsx","pages/HomePage.tsx","components/SearchView.tsx","utils/StorageUtils.tsx","pages/BookPage.tsx","tracking/GoogleAnalytics.tsx","tracking/EventFunctions.tsx","components/LyricView.tsx","components/MusicView.tsx","utils/PlatformUtils.tsx","pages/SongPage.tsx","database/DbManager.tsx","App.tsx","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["SongViewMode","FeedbackScreen","SERVICE_ID","EMAIL_TEMPLATE","useState","fromWhom","setFromWhom","message","setMessage","feedbackResponseText","setFeedbackResponseText","feedbackResponseModal","setShowFeedbackResponseModal","emailjs","init","process","EMAILJS_USERID","id","position","type","value","placeholder","onIonChange","e","detail","rows","expand","onClick","templateParams","from_name","send","then","response","console","log","status","text","error","sendEmail","isOpen","onDidDismiss","clearResponseModal","className","SettingsView","chosenSetting","setChosenSetting","FeedbackForm","color","NavigationBar","props","showSettingsModal","setShowSettingsModal","AppName","slot","backButtonOnClick","icon","homeOutline","RenderBackButton","toggleSongModeOnClick","musicalNotesOutline","swapHorizontalOutline","documentTextOutline","RenderToggleSongModeButton","settingsOutline","HomePage","to","shlName","shlJsonUrl","removePunctuation","s","replace","SearchView","bookId","useParams","songCards","setSongCards","songs","entries","songCardsIterator","history","useHistory","searchParam","undefined","searchString","trim","toLowerCase","searchNumber","Number","isNaN","length","split","GetSearchParam","searchIsNumber","push","GenerateSongCard","LoadSongs","onIonInfinite","event","target","disabled","Array","from","complete","loadingSpinner","loadingText","songIterator","count","nextSong","next","done","song","SongMatchesSearch","key","songNumber","title","author","includes","Storage","Plugins","shlKey","getShlSongs","a","getItem","item","fetch","json","body","storeItem","JSON","stringify","parse","catch","r","set","get","BookPage","setSearchString","setSongs","useEffect","Event","category","action","label","ReactGA","triggerSongView","mode","toString","String","LyricView","setSong","Lyrics","lines","lyrics","verses","Object","keys","forEach","versenumber","line","getLyrics","songsWithTwoTunes","MusicView","num","widthPixels","isPlatform","window","innerWidth","secondTune","setSecondTune","width","setWidth","zoomed","setZoomed","songHasTwoTunes","secondTuneSuffix","url","baseUrl","Music","checked","style","onDoubleClick","src","alt","SongPage","songId","songViewMode","setSongViewMode","VERSION","SCHEMA","SONGS_TABLE","SQL_DB_NAME","SONGS_TABLE_CONFIG","name","location","DbManager","songsTable","SQLite","create","db","executeSql","CREATE_SONGS_TABLE","openDatabase","changeVersion","transaction","this","instance","SONG_NUMBER","BOOK_ID","initialize","GOOGLEANALYTICS_STREAMID","pageview","pathname","search","App","getInstance","path","component","exact","ReactDOM","render","document","getElementById","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","module","exports"],"mappings":"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CAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUrM,MAAK,WAC7B,IAAIR,EAAI,IAAI8M,MAAM,uBAAyBL,EAAM,KAEjD,MADAzM,EAAE+M,KAAO,mBACH/M,KAIR,IAAIgN,EAAMT,EAAIE,GAAM/M,EAAKsN,EAAI,GAC7B,OAAON,EAAoB1M,EAAEgN,EAAI,IAAIxM,MAAK,WACzC,OAAOkM,EAAoBhN,MAG7B8M,EAAoBpE,KAAO,WAC1B,OAAOD,OAAOC,KAAKmE,IAEpBC,EAAoB9M,GAAK,GACzBuN,EAAOC,QAAUV,G,mBCxUjB,IAAID,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUrM,MAAK,WAC7B,IAAIR,EAAI,IAAI8M,MAAM,uBAAyBL,EAAM,KAEjD,MADAzM,EAAE+M,KAAO,mBACH/M,KAIR,IAAIgN,EAAMT,EAAIE,GAAM/M,EAAKsN,EAAI,GAC7B,OAAON,EAAoB1M,EAAEgN,EAAI,IAAIxM,MAAK,WACzC,OAAOkM,EAAoBhN,MAG7B8M,EAAoBpE,KAAO,WAC1B,OAAOD,OAAOC,KAAKmE,IAEpBC,EAAoB9M,GAAK,GACzBuN,EAAOC,QAAUV,I","file":"static/js/main.557be291.chunk.js","sourcesContent":["/**\n * Helpers for Song Related things.\n *\n * Write the helper function here, and then use them by importing it by relative path like:\n *\n * import { makeThreeDigits } from '../utils/SongUtils'\n */\n\nexport const shlName = \"Songs and Hymns of Life\";\n\nexport const shlJsonUrl =\n  \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/metadata/shl.json\";\n\n/**\n * Prepends 0s onto a 1 or 2 digit number to make it look like a 3 digit number.\n */\nexport function makeThreeDigits(num: number): string {\n  if (num < 10) {\n    return `00${num}`;\n  } else if (num < 100) {\n    return `0${num}`;\n  } else {\n    return `${num}`;\n  }\n}\n\nexport function removePunctuation(s: string): string {\n  return s.replace(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g, \"\");\n}\n\nexport enum SongViewMode {\n  Music,\n  Lyrics,\n}\n\n// TODO: use json schema\nexport interface Song {\n  title: string;\n  author: string;\n  songNumber: number;\n\n  // [Issue #74] This needs to be fixed and turned back on:\n  lyrics: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n","import { IonButton, IonInput, IonItem, IonLabel, IonModal, IonTextarea } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport emailjs from \"emailjs-com\";\n\n/**\n * Feedback Screen.\n *\n * Uses EmailJS as a service to send emails.\n * This class will send actual emails when people have feedback.\n */\nconst FeedbackScreen: React.FC = () => {\n  const SERVICE_ID = \"hymnal_app_service_id\";\n  const EMAIL_TEMPLATE = \"template_z4z7bhi\";\n\n  const [fromWhom, setFromWhom] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [feedbackResponseText, setFeedbackResponseText] = useState<string>(\"\");\n  const [feedbackResponseModal, setShowFeedbackResponseModal] = useState<boolean>(false);\n\n  emailjs.init(process.env.EMAILJS_USERID as string);\n\n  return (\n    <div id=\"feedbackFormDiv\">\n      <IonItem>\n        <IonLabel position=\"floating\">Name</IonLabel>\n        <IonInput\n          type=\"text\"\n          value={fromWhom}\n          placeholder=\"Enter your name\"\n          onIonChange={(e) => setFromWhom(e.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel position=\"floating\">What do you think?</IonLabel>\n        <IonTextarea\n          rows={7}\n          value={message}\n          placeholder=\"Enter feedback\"\n          onIonChange={(e) => setMessage(e.detail.value as string)}\n        ></IonTextarea>\n      </IonItem>\n\n      <IonButton expand=\"full\" onClick={() => sendEmail()}>\n        Submit Feedback\n      </IonButton>\n\n      <IonModal id=\"feedbackResponseModal\" isOpen={feedbackResponseModal} onDidDismiss={() => clearResponseModal()}>\n        <h1 className=\"center\">{feedbackResponseText}</h1>\n        <IonButton id=\"feedbackResponseOKButton\" onClick={() => clearResponseModal()}>\n          OK\n        </IonButton>\n      </IonModal>\n    </div>\n  );\n\n  /**\n   * Sends an email to the hymnal dev team when someone has feedback.\n   */\n  function sendEmail() {\n    const templateParams = {\n      from_name: fromWhom,\n      message: message,\n    };\n    if (message === \"\" || fromWhom === \"\") {\n      setFeedbackResponseText(\"Please tell us your name and feedback message!\");\n    } else {\n      emailjs.send(SERVICE_ID, EMAIL_TEMPLATE, templateParams).then(\n        function (response) {\n          console.log(\"Email sent successfully.\", response.status, response.text);\n          setFeedbackResponseText(\"Feedback Submitted Sucessfully, Thanks!\");\n        },\n        function (error) {\n          setFeedbackResponseText(`Error Submitting Feedback: ${error}`);\n          console.log(\"Error sending email: \", error);\n        }\n      );\n      clearForm();\n    }\n    setShowFeedbackResponseModal(true);\n  }\n\n  // Clears form fields.\n  function clearForm() {\n    setFromWhom(\"\");\n    setMessage(\"\");\n  }\n\n  // Clears and hides Response modal.\n  function clearResponseModal() {\n    setFeedbackResponseText(\"\");\n    setShowFeedbackResponseModal(false);\n  }\n};\n\nexport default FeedbackScreen;\n","import { IonButton, IonContent, IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport FeedbackForm from \"./FeedbackForm\";\n\n/**\n * Settings Page.\n */\nconst SettingsView: React.FC = () => {\n  const [chosenSetting, setChosenSetting] = useState<string>(\"\");\n\n  return (\n    <IonContent>\n      {/* To add another settings item, add another IonItem with an IonLabel. */}\n      {/* TODO: Add Font Size as an option. */}\n      {chosenSetting === \"\" ? (\n        <IonList>\n          <IonItem id=\"settingsTitle\">\n            <IonLabel>Settings</IonLabel>\n          </IonItem>\n          <IonItem>\n            <IonButton onClick={() => setChosenSetting(\"feedback\")}>Submit Feedback</IonButton>\n          </IonItem>\n        </IonList>\n      ) : null}\n\n      {chosenSetting === \"feedback\" ? <FeedbackForm /> : null}\n\n      {chosenSetting !== \"\" ? (\n        <IonButton color=\"light\" expand=\"full\" id=\"backToSettingsButton\" onClick={() => setChosenSetting(\"\")}>\n          Return to Settings\n        </IonButton>\n      ) : null}\n    </IonContent>\n  );\n};\n\nexport default SettingsView;\n","import { IonButton, IonTitle, IonToolbar, IonButtons, IonModal, IonIcon } from \"@ionic/react\";\nimport \"./Components.css\";\nimport {\n  documentTextOutline,\n  homeOutline,\n  musicalNotesOutline,\n  settingsOutline,\n  swapHorizontalOutline,\n} from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport SettingsView from \"../components/SettingsView\";\nimport { AppName } from \"../App\";\n\ninterface NavigationBarProps {\n  backButtonOnClick?: () => void;\n  toggleSongModeOnClick?: () => void;\n}\n\n/**\n * Navigation Bar Component\n */\nconst NavigationBar: React.FC<NavigationBarProps> = (props) => {\n  // whether or not to show settings modal\n  const [showSettingsModal, setShowSettingsModal] = useState<boolean>(false);\n\n  return (\n    <IonToolbar>\n      {/* [eric] we can probably come up with a better name, right? */}\n      <IonTitle id=\"appName\">{AppName}</IonTitle>\n      <IonButtons slot=\"start\">{RenderBackButton()}</IonButtons>\n      <IonButtons slot=\"primary\">\n        {RenderToggleSongModeButton()}\n        {/* TODO: Put this Image/Lyric mode button into settings page. \n          This might require some react magic to get state from a child component */}\n        <IonButton onClick={() => setShowSettingsModal(true)}>\n          <IonIcon icon={settingsOutline} />\n        </IonButton>\n      </IonButtons>\n\n      {/* Settings Menu Popup  */}\n      <IonModal id=\"settingsModal\" isOpen={showSettingsModal} onDidDismiss={() => setShowSettingsModal(false)}>\n        <SettingsView />\n        <IonButton id=\"returnToHymnalButton\" onClick={() => setShowSettingsModal(false)}>\n          Back to Hymnal\n        </IonButton>\n      </IonModal>\n    </IonToolbar>\n  );\n\n  function RenderBackButton() {\n    if (!props.backButtonOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton onClick={props.backButtonOnClick}>\n        <IonIcon icon={homeOutline} />\n      </IonButton>\n    );\n  }\n\n  function RenderToggleSongModeButton() {\n    if (!props.toggleSongModeOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton id=\"songViewToggler\" onClick={props.toggleSongModeOnClick}>\n        <IonIcon icon={musicalNotesOutline} />\n        <IonIcon icon={swapHorizontalOutline} />\n        <IonIcon icon={documentTextOutline} />\n      </IonButton>\n    );\n  }\n};\n\nexport default NavigationBar;\n","import { IonContent, IonPage, IonHeader } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React from \"react\";\nimport { Redirect } from \"react-router\";\n\n/**\n * Home Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst HomePage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar />\n      </IonHeader>\n\n      <IonContent>\n        {/* Redirect to book page until we add more book or make this page functional */}\n        <Redirect to=\"shl\" />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default HomePage;\n","import {\n  IonList,\n  IonCard,\n  IonCardTitle,\n  IonCardSubtitle,\n  IonLabel,\n  IonItem,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { removePunctuation, Song } from \"../utils/SongUtils\";\nimport \"./Components.css\";\n\ninterface SearchViewProps {\n  searchString: string;\n  songs: Song[];\n}\n\n/**\n * Search View.\n */\nconst SearchView: React.FC<SearchViewProps> = (props: SearchViewProps) => {\n  const { bookId } = useParams<{ bookId: string }>();\n  const [songCards, setSongCards] = useState<JSX.Element[]>([]);\n  const [songCardsIterator] = useState(props.songs.entries());\n\n  const history = useHistory();\n  const searchParam = GetSearchParam();\n  const searchIsNumber = typeof searchParam === \"number\";\n\n  if (searchIsNumber) {\n    songCards.push(GenerateSongCard(props.songs[(searchParam as number) - 1]));\n  } else {\n    if (songCards.length === 0) {\n      LoadSongs(songCardsIterator, 20, searchParam as string[]);\n    }\n  }\n\n  return songCards.length > 0 ? (\n    <div>\n      <IonList>{songCards}</IonList>\n      <IonInfiniteScroll onIonInfinite={LoadMoreSongs} disabled={searchIsNumber}>\n        <IonInfiniteScrollContent\n          loadingSpinner=\"bubbles\"\n          loadingText=\"Loading more songs...\"\n        ></IonInfiniteScrollContent>\n      </IonInfiniteScroll>\n    </div>\n  ) : props.searchString !== \"\" ? (\n    <IonItem>\n      <IonLabel>No results found</IonLabel>\n    </IonItem>\n  ) : null;\n\n  function LoadMoreSongs(event: CustomEvent<void>) {\n    const target = event.target as HTMLIonInfiniteScrollElement;\n    if (!LoadSongs(songCardsIterator, 10, searchParam as string[])) {\n      target.disabled = true;\n    }\n    setSongCards(Array.from(songCards));\n    target.complete();\n  }\n\n  function LoadSongs(songIterator: IterableIterator<[number, Song]>, count: number, searchParam: string[]): boolean {\n    while (count > 0) {\n      const nextSong = songIterator.next();\n      if (nextSong.done) {\n        return false;\n      }\n\n      const song = nextSong.value[1];\n\n      if (SongMatchesSearch(song, searchParam)) {\n        songCards.push(GenerateSongCard(song));\n        count--;\n      }\n    }\n\n    return true;\n  }\n\n  function GetSearchParam() {\n    if (\n      props.searchString === undefined ||\n      typeof props.searchString !== \"string\" ||\n      props.searchString.trim() === \"\"\n    ) {\n      return [];\n    }\n\n    const searchString = removePunctuation(props.searchString.trim().toLowerCase());\n    const searchNumber = Number(searchString);\n\n    if (!isNaN(searchNumber) && searchNumber > 0 && searchNumber <= props.songs.length) {\n      return searchNumber;\n    }\n\n    return searchString.split(\" \");\n  }\n\n  function GenerateSongCard(song: Song) {\n    return (\n      <IonCard\n        key={song.songNumber}\n        onClick={() => {\n          history.push(`/${bookId}/${song.songNumber}`);\n        }}\n        className=\"hymnalListView\"\n      >\n        <IonCardTitle>\n          {song.songNumber}. {song.title}\n        </IonCardTitle>\n        <IonCardSubtitle>{song.author}</IonCardSubtitle>\n      </IonCard>\n    );\n  }\n\n  function SongMatchesSearch(song: Song, searchParam: string[]): boolean {\n    if (searchParam === undefined || searchParam.length === 0) {\n      return true;\n    }\n\n    const title = removePunctuation(song.title.toLowerCase());\n    const author = removePunctuation(song.author.toLowerCase());\n\n    for (const s of searchParam) {\n      if (!title.includes(s) && !author.includes(s)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n};\n\nexport default SearchView;\n","import { Plugins } from \"@capacitor/core\";\nimport { shlJsonUrl, shlName, Song } from \"./SongUtils\";\n\n/**\n * Utilities for storing Simple Key-Value pair data locally.\n * On web this uses browser cache, on Android it uses SharedPreferences, on iOS it uses UserDefaults.\n */\n\nconst { Storage } = Plugins;\n\nexport const shlKey = \"shl\";\n\nexport const YES = \"yes\";\nexport const NO = \"no\";\n\n// Try to get the songs metadata from local cache storage. Otherwise, try to get it from online.\nexport async function getShlSongs(): Promise<Song[]> {\n  return getItem(shlKey)\n    .then(async (item) => {\n      if (!item) {\n        const response = await fetch(shlJsonUrl);\n        const body = await response.json();\n        storeItem(shlKey, JSON.stringify(body));\n        // TODO (Brandon): Use Database instead of JSON.\n        // populateDatabase(body[shlName], 1);\n        return body[shlName];\n      } else {\n        return JSON.parse(item)[shlName];\n      }\n    })\n    .catch((r) => {\n      console.error(r);\n      return [];\n    });\n}\n\n/**\n * Stores an item with given key/value pair. The value can be any string, including JSON strings.\n * If an item with that key already existed, it will overwrite the value.\n */\nexport async function storeItem(key: string, value: string): Promise<void> {\n  return Storage.set({\n    key: key,\n    value: value,\n  }).catch((error) => {\n    console.log(`Error storing item because ${error}.`);\n  });\n}\n\n/**\n * Retrieves an item with the given key, or blank if not found.\n */\nexport async function getItem(key: string): Promise<string> {\n  const value = (await Storage.get({ key: key })).value;\n  if (value === null) {\n    return \"\";\n  }\n  return value;\n}\n\n/**\n * Clears all values from the storage cache.\n */\nexport function clearCache(): void {\n  console.log(\"Clearing Local Cache.\");\n  Storage.clear();\n}\n","import { IonContent, IonPage, IonItem, IonHeader, IonSearchbar } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useEffect, useState } from \"react\";\nimport SearchView from \"../components/SearchView\";\nimport { useHistory } from \"react-router-dom\";\nimport { Song } from \"../utils/SongUtils\";\nimport { getShlSongs } from \"../utils/StorageUtils\";\n\n/**\n * Book Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst BookPage: React.FC = () => {\n  // the search string inputted by the user\n  const [searchString, setSearchString] = useState<string>(\"\");\n  const [songs, setSongs] = useState<Song[]>([]);\n\n  useEffect(() => {\n    getShlSongs()\n      .then((song) => (song ? song : []))\n      .then(setSongs);\n  }, []);\n\n  const history = useHistory();\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar backButtonOnClick={() => history.push(\"/\")} />\n      </IonHeader>\n      <IonItem>\n        <IonSearchbar\n          id=\"searchBar\"\n          type=\"search\"\n          value={searchString}\n          placeholder=\"Search for a song\"\n          onIonChange={(e) => setSearchString(e.detail.value as string)}\n        ></IonSearchbar>\n      </IonItem>\n      {/* The key here will trigger a re-initialization of a new searchView when it changes. */}\n      <IonContent key={searchString}>\n        <SearchView key={searchString + songs.length} searchString={searchString} songs={songs} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default BookPage;\n","import ReactGA from \"react-ga\";\n\nexport const initGA = (): void => {\n  ReactGA.initialize(process.env.GOOGLEANALYTICS_STREAMID as string);\n};\n\nexport const PageView = (): void => {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n  console.log(\"Page viewed\");\n};\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category\n * @param {string} action\n * @param {string} label\n */\n\nexport const Event = (category: string, action: string, label: string): void => {\n  ReactGA.event({\n    category: category,\n    action: action,\n    label: label,\n  });\n};\n","import { SongViewMode } from \"../utils/SongUtils\";\nimport { Event } from \"./GoogleAnalytics\";\n\nexport function triggerSongView(songNumber: number, mode: SongViewMode): void {\n  try {\n    Event(\"INTERACTION\", `Song viewed(${SongViewMode[mode]})`, songNumber.toString());\n    console.log(`Song number: ${String(songNumber)} viewed in ${SongViewMode[mode]} mode`);\n  } catch (e) {\n    console.error(e);\n  }\n}\n","import { IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonItem, IonLabel } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Song, SongViewMode } from \"../utils/SongUtils\";\nimport { getShlSongs } from \"../utils/StorageUtils\";\nimport \"./Components.css\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\n\ninterface LyricViewProps {\n  songNumber: number;\n}\n\n/**\n * Lyric Viewer React Functional Component.\n */\nconst LyricView: React.FC<LyricViewProps> = (props: LyricViewProps) => {\n  const [song, setSong] = useState<Song>();\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Lyrics);\n    getShlSongs()\n      .then((songs) => songs[props.songNumber - 1])\n      .then(setSong)\n      .catch((r) => {\n        console.error(r);\n        return <IonItem lines=\"none\">No song found.</IonItem>;\n      });\n  }, [props.songNumber]);\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle key={song?.title}>{song?.title}</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent key={song?.lyrics}>{song ? getLyrics(song) : song}</IonCardContent>\n    </IonCard>\n  );\n\n  /**\n   * Parses all verse of the song to a string.\n   */\n  function getLyrics(song: Song) {\n    const verses = Object.keys(song.lyrics);\n    const lyrics: JSX.Element[] = [];\n    let key = 0;\n    verses.forEach((versenumber) => {\n      lyrics.push(<IonLabel key={key}>{getVerseText(versenumber)}</IonLabel>);\n      key++;\n      song.lyrics[versenumber].forEach((line: string) => {\n        lyrics.push(\n          <IonItem key={key} lines=\"none\">\n            <IonLabel className=\"ion-text-wrap\">{line}</IonLabel>\n          </IonItem>\n        );\n        key++;\n      });\n    });\n\n    return lyrics;\n  }\n\n  function getVerseText(verse: string) {\n    return verse\n      .toLowerCase()\n      .replace(\"v\", \"Verse \")\n      .replace(\"c\", \"Chorus \")\n      .replace(\"b\", \"Bridge \")\n      .replace(\"p\", \"Pre-Chorus \");\n  }\n};\n\nexport default LyricView;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Components.css\";\nimport { makeThreeDigits, SongViewMode } from \"../utils/SongUtils\";\nimport { IonToggle } from \"@ionic/react\";\nimport { isBrowser } from \"../utils/PlatformUtils\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\n\nconst baseUrl = \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/images/\";\nconst hymnalPart = \"shl/SHL_\"; // This part can change when red book is added\nconst imageSuffix = \".png\";\nconst alt = \"No Song Found\";\n\nconst songsWithTwoTunes = [156, 216, 278, 478];\n\n// Props are kind of like the parameters for the constructor of this class.\ninterface MusicViewProps {\n  songNumber: number;\n}\n\n/**\n * Song Viewer React Functional Component.\n */\nconst MusicView: React.FC<MusicViewProps> = (props: MusicViewProps) => {\n  const widthPixels = isBrowser() ? window.innerWidth / 2 : window.innerWidth;\n  const [secondTune, setSecondTune] = useState<boolean>(false);\n  const [width, setWidth] = useState<number>(widthPixels);\n  const [zoomed, setZoomed] = useState<boolean>(false);\n\n  const songHasTwoTunes = songsWithTwoTunes.includes(props.songNumber);\n\n  const secondTuneSuffix = songHasTwoTunes && secondTune ? \"-B\" : \"\";\n\n  const url = baseUrl + hymnalPart + makeThreeDigits(props.songNumber) + secondTuneSuffix + imageSuffix;\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Music);\n  }, [props.songNumber]);\n\n  // TODO: Add Pinch and Zoom to image.\n  return (\n    <div>\n      {/* Second Tune Toggler  */}\n      {songHasTwoTunes && (\n        <div id=\"songToggler\">\n          <IonToggle checked={secondTune} onIonChange={() => setSecondTune(!secondTune)} />\n        </div>\n      )}\n\n      {/* image */}\n      {/* <TransformWrapper>\n        <TransformComponent> */}\n      <img\n        style={{ width: width }}\n        id=\"musicView\"\n        onDoubleClick={() => {\n          if (zoomed) {\n            setWidth(widthPixels);\n          } else setWidth(widthPixels * 2);\n          setZoomed(!zoomed);\n        }}\n        src={url}\n        alt={alt}\n      />\n      {/* </TransformComponent>\n      </TransformWrapper> */}\n    </div>\n  );\n};\n\nexport default MusicView;\n","import { getPlatforms, isPlatform } from \"@ionic/react\";\n\n/**\n * Platform Utils:\n *\n * Android: Current platforms: android,cordova,capacitor,mobile,hybrid\n * iOS:\n * Chrome Mobile Mode: Current platforms: android,tablet,mobile,mobileweb\n * Chrome Regular Desktop: Current platforms: desktop\n */\n\n/**\n * Returns true if this is app currently running on an iOS device.\n */\nexport function isIOS(): boolean {\n  return isPlatform(\"ios\");\n}\n\n/**\n * Returns true if this app is currently running on an Android device.\n */\nexport function isAndroid(): boolean {\n  return isPlatform(\"android\");\n}\n\n/**\n * Returns true if this app is currently running on the desktop.\n */\nexport function isBrowser(): boolean {\n  return isPlatform(\"desktop\");\n}\n\n/**\n * Returns true if the platform supports Cordova.\n *\n * * SQLite requires Cordova.\n */\nexport function isCordova(): boolean {\n  return isPlatform(\"cordova\");\n}\n\nexport function logPlatforms(): void {\n  console.log(\"Current platforms: \" + getPlatforms());\n}\n","import { IonContent, IonPage, IonHeader } from \"@ionic/react\";\nimport { SongViewMode } from \"../utils/SongUtils\";\nimport LyricView from \"../components/LyricView\";\nimport MusicView from \"../components/MusicView\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n//Import Event tracking\nimport { Event } from \"../tracking/GoogleAnalytics\";\n\n/**\n * Song Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst SongPage: React.FC = () => {\n  const { bookId, songId } = useParams<{ bookId: string; songId: string }>();\n  const history = useHistory();\n\n  // when in song view, use music view or lyrics view\n  const [songViewMode, setSongViewMode] = useState<SongViewMode>(SongViewMode.Music);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar\n          backButtonOnClick={() => {\n            history.push(`/${bookId}`);\n          }}\n          toggleSongModeOnClick={ToggleSongMode}\n        />\n      </IonHeader>\n\n      <IonContent>\n        {/* TODO: Add error handling in case of non number song Id */}\n        {RenderSong(+songId)}\n      </IonContent>\n    </IonPage>\n  );\n\n  function RenderSong(songNumber: number) {\n    if (songViewMode === SongViewMode.Music) {\n      return <MusicView songNumber={songNumber} />;\n    } else {\n      return <LyricView songNumber={songNumber} />;\n    }\n  }\n\n  function ToggleSongMode() {\n    if (songViewMode === SongViewMode.Music) {\n      setSongViewMode(SongViewMode.Lyrics);\n    } else {\n      setSongViewMode(SongViewMode.Music);\n    }\n    try {\n      Event(\"INTERACTION\", \"Songmode is toggled\", \"SongMode_Toggle\");\n    } catch (e) {\n      console.error(e);\n    }\n  }\n};\n\nexport default SongPage;\n","import { SQLiteDatabaseConfig, SQLiteObject, SQLite } from \"@ionic-native/sqlite\";\nimport { isCordova } from \"../utils/PlatformUtils\";\n\nconst VERSION = \"1.0\";\nconst SCHEMA = `hymnal_1`;\nexport const SONGS_TABLE = `songs_1`;\n\nconst SQL_DB_NAME = `${SCHEMA}.${SONGS_TABLE}`;\nconst SONGS_TABLE_CONFIG: SQLiteDatabaseConfig = {\n  name: SQL_DB_NAME,\n  location: \"default\",\n};\n\nexport const DATABASE_INITIALIZED = \"databaseInitialized\";\nexport const LYRICS_ONLY_MODE = \"lyricsOnlyMode\";\ndeclare const window: { openDatabase: (arg0: string, arg1: string, arg2: string, arg3: number) => Database };\n\n/**\n * Overall Database stuff.\n * This class defines all the tables and instantiates them as a singleton database object when the app starts up.\n */\nexport class DbManager {\n  private static instance: DbManager;\n  private songsTable: SQLiteObject | Database | undefined;\n\n  /**\n   * Constructs the SQLiteObject used to make queries.\n   * Creating the DB is asynchronous so just initiate it when the app starts and hope the\n   * DB is not called again too quickly after so the songsTable object has time to initialize.\n   */\n  private constructor() {\n    if (isCordova()) {\n      // Mobile app, use SQLite.\n      try {\n        SQLite.create(SONGS_TABLE_CONFIG).then((db) => {\n          this.songsTable = db;\n          db.executeSql(CREATE_SONGS_TABLE).then(() => {\n            console.log(`Successfully opened SQLite database schema ${SCHEMA} and created table: ${SONGS_TABLE}.`);\n          });\n        });\n      } catch (e) {\n        console.log(\"Error creating SQLite database: \" + e + e.message);\n      }\n    } else {\n      // Not Mobile app, so use WebSQL to generate the SQLiteObject used for queries.\n      try {\n        const db: Database = window.openDatabase(SCHEMA, VERSION, SQL_DB_NAME, 5 * 1024 * 1024);\n        db.changeVersion(\n          VERSION,\n          VERSION,\n          (transaction) => {\n            transaction.executeSql(CREATE_SONGS_TABLE);\n          },\n          (error) => {\n            console.log(`Error creating database ${SQL_DB_NAME} because ${error}, ${error.message}`);\n          },\n          () => {\n            console.log(`Successfully opened WebSQL database schema: ${SCHEMA} and created table: ${SONGS_TABLE}.`);\n          }\n        );\n        this.songsTable = db;\n      } catch (e) {\n        console.log(\"Error creating the WebSQL database: \" + e + e.message);\n      }\n    }\n  }\n\n  get getSongsTable(): SQLiteObject | Database | undefined {\n    return this.songsTable;\n  }\n\n  static getInstance(): DbManager {\n    if (!DbManager.instance) {\n      DbManager.instance = new DbManager();\n    }\n    return DbManager.instance;\n  }\n}\n\n/**\n * Songs Table Constants and CREATE query.\n */\nexport const SONG_NUMBER = \"song_number\";\nexport const BOOK_ID = \"book_id\";\nexport const NUM_HITS = \"num_hits\";\nexport const LAST_USED = \"last_used\";\nexport const FAVORITED = \"favorited\";\nexport const AUTHOR = \"author\";\nexport const TITLE = \"title\";\nexport const LYRICS = \"lyrics\";\n\nconst CREATE_SONGS_TABLE = `CREATE TABLE IF NOT EXISTS ${SONGS_TABLE}(\n  ${SONG_NUMBER} int,\n  ${BOOK_ID} int,\n  ${NUM_HITS} int,\n  ${LAST_USED} datetime,\n  ${FAVORITED} boolean,\n  ${AUTHOR} text,\n  ${TITLE} text,\n  ${LYRICS} text,\n  primary key (${SONG_NUMBER}, ${BOOK_ID})\n);`;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\nimport HomePage from \"./pages/HomePage\";\nimport BookPage from \"./pages/BookPage\";\nimport SongPage from \"./pages/SongPage\";\nimport { DbManager } from \"./database/DbManager\";\nimport { initGA, PageView } from \"./tracking/GoogleAnalytics\";\n\ntry {\n  initGA();\n  PageView();\n} catch (e) {\n  console.error(e);\n}\n\nexport const AppName = \"Hymnal App\";\n\nconst App: React.FC = () => {\n  DbManager.getInstance();\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/:bookId\" component={BookPage} exact />\n        <Route path=\"/:bookId/:songId\" component={SongPage} exact />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t105,\n\t\t11\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t106,\n\t\t12\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t107,\n\t\t13\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t108,\n\t\t14\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t109,\n\t\t15\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t110,\n\t\t16\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t111,\n\t\t33\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t112,\n\t\t34\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t113,\n\t\t35\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t114,\n\t\t36\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t115,\n\t\t77\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t116,\n\t\t78\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t117,\n\t\t37\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t118,\n\t\t38\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t119,\n\t\t39\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t120,\n\t\t40\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t121,\n\t\t41\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t122,\n\t\t42\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t123,\n\t\t43\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t124,\n\t\t44\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t125,\n\t\t79\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t126,\n\t\t21\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t127,\n\t\t22\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t128,\n\t\t45\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t129,\n\t\t46\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t130,\n\t\t80\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t131,\n\t\t81\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t132,\n\t\t82\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t133,\n\t\t47\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t134,\n\t\t48\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t135,\n\t\t49\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t136,\n\t\t50\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t137,\n\t\t51\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t138,\n\t\t52\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t139,\n\t\t53\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t140,\n\t\t54\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t141,\n\t\t55\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t142,\n\t\t56\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t143,\n\t\t17\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t144,\n\t\t18\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t145,\n\t\t29\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t146,\n\t\t19\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t147,\n\t\t20\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t148,\n\t\t57\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t149,\n\t\t58\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t150,\n\t\t59\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t151,\n\t\t60\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t152,\n\t\t61\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t153,\n\t\t62\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t154,\n\t\t23\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t155,\n\t\t24\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t156,\n\t\t31\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t157,\n\t\t32\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t158,\n\t\t83\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t159,\n\t\t63\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t160,\n\t\t64\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t161,\n\t\t65\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t162,\n\t\t66\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t163,\n\t\t67\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t164,\n\t\t68\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t165,\n\t\t69\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t166,\n\t\t84\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t167,\n\t\t85\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t168,\n\t\t27\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t169,\n\t\t86\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t170,\n\t\t87\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t171,\n\t\t70\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t172,\n\t\t71\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t173,\n\t\t30\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t174,\n\t\t72\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t175,\n\t\t73\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t176,\n\t\t74\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t177,\n\t\t75\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t178,\n\t\t76\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t179,\n\t\t25\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t180,\n\t\t26\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t181,\n\t\t88\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 91;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t183,\n\t\t91\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 93;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}