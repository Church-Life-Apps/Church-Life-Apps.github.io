{"version":3,"sources":["utils/SongUtils.tsx","components/FeedbackForm.tsx","utils/SecurityUtils.tsx","components/SettingsView.tsx","components/NavigationBar.tsx","pages/HomePage.tsx","components/SearchView.tsx","utils/StringUtils.tsx","service/SongsService.tsx","pages/BookPage.tsx","utils/PlatformUtils.tsx","tracking/GoogleAnalytics.tsx","tracking/EventFunctions.tsx","components/LyricView.tsx","components/MusicView.tsx","pages/SongPage.tsx","App.tsx","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["SongViewMode","FeedbackScreen","encryptedtext","privateKey","octokit","Octokit","auth","CryptoJS","AES","decrypt","toString","enc","Utf8","useState","fromWhom","setFromWhom","message","setMessage","title","setTitle","feedbackResponseText","setFeedbackResponseText","feedbackResponseModal","setShowFeedbackResponseModal","id","position","type","value","placeholder","onIonChange","e","detail","rows","expand","onClick","sentFromWhom","rest","issues","create","owner","repo","body","then","response","console","debug","status","data","error","isOpen","onDidDismiss","clearResponseModal","className","SettingsView","chosenSetting","setChosenSetting","FeedbackForm","color","PLACEHOLDER_SONG","author","songNumber","lyrics","Map","presentation","songbooksListUrl","defaultSongbooks","name","bookId","lyricsUrl","musicUrl","cachedSongbooks","songbooksFetched","getSongbooks","a","fetch","json","stableBooks","songbooks","getSongbookById","find","book","NavigationBar","props","showSettingsModal","setShowSettingsModal","songbookName","setSongbookName","useParams","useEffect","slot","backButtonOnClick","icon","homeOutline","RenderBackButton","toggleSongModeOnClick","musicalNotesOutline","swapHorizontalOutline","documentTextOutline","RenderToggleSongModeButton","settingsOutline","HomePage","history","useHistory","setSongbooks","books","map","it","songbook","push","SearchView","songCards","setSongCards","songs","entries","songCardsIterator","length","LoadSongs","onIonInfinite","event","target","disabled","Array","from","complete","loadingSpinner","loadingText","songIterator","count","nextSong","next","done","song","GenerateSongCard","removePunctuation","s","replace","stringSimilarity","require","getSimilarity","word","search","compareTwoStrings","toLowerCase","tokenize","sentence","split","normalize","trim","isNumeric","isNaN","normalizedLyrics","tokenizedLyrics","getOrfetchSongs","undefined","cachedSongs","get","songsForBook","set","number","Object","searchString","filter","startsWith","matchScores","forEach","getMatchScore","log","sort","song1","song2","matchScore","searchTokens","titleTokens","authorTokens","includes","has","values","String","join","BookPage","setSearchString","setSongs","timeOutId","setTimeout","listSongs","catch","clearTimeout","isBrowser","isPlatform","Event","category","action","label","ReactGA","triggerSongView","mode","LyricView","setSong","songId","Lyrics","getSong","class","size","key","songLyrics","presentationOrder","verseNumber","verseName","getVerseText","verseLyrics","buildLyricBlock","mainChorusNumber","mainChorusLyrics","choruses","nonChoruses","chorusName","chorusLyrics","chorusNumber","getLyrics","verse","lines","lyricsElement","line","index","songsWithTwoTunes","MusicView","num","widthPixels","window","innerWidth","secondTune","setSecondTune","width","setWidth","zoomed","setZoomed","setSongbook","songHasTwoTunes","secondTuneSuffix","url","Music","checked","style","onDoubleClick","src","alt","SongPage","songViewMode","setSongViewMode","songBookLength","setSongBookLength","getNumSongsForBookId","vertical","horizontal","Math","min","arrowBackCircleOutline","RenderPrevButton","max","arrowForwardCircleOutline","RenderNextButton","initialize","pageview","location","pathname","App","getPlatforms","path","component","exact","ReactDOM","render","document","getElementById","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","keys","module","exports"],"mappings":"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","file":"static/js/main.feafc56e.chunk.js","sourcesContent":["/**\n * Helpers for Song Related things.\n *\n * Write the helper function here, and then use them by importing it by relative path like:\n *\n * import { makeThreeDigits } from '../utils/SongUtils'\n */\n\n/**\n * Prepends 0s onto a 1 or 2 digit number to make it look like a 3 digit number.\n */\nexport function makeThreeDigits(num: number): string {\n  if (num < 10) {\n    return `00${num}`;\n  } else if (num < 100) {\n    return `0${num}`;\n  } else {\n    return `${num}`;\n  }\n}\n\nexport enum SongViewMode {\n  Music,\n  Lyrics,\n}\n\n/**\n * Fields from the shl.json resource file.\n * Add more fields here when they are required in the app.\n */\nexport interface Song {\n  title: string;\n  author: string;\n  songNumber: number;\n  lyrics: Map<string, string[]>;\n  presentation: string;\n}\n\n// Placeholder blank song.\nexport const PLACEHOLDER_SONG: Song = { title: \"\", author: \"\", songNumber: 0, lyrics: new Map(), presentation: \"\" };\n\n/* ---------- Songbook Stuff -------------- */\nexport interface Songbook {\n  name: string;\n  bookId: string;\n  lyricsUrl: string;\n  musicUrl: string;\n}\n\n/* SongBooks List Url */\nexport const songbooksListUrl =\n  \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/songbooks.json\";\n\n/**\n * Default Songbooks to show until we pull from the above link to dynamically get all songbooks.\n * Add songbooks to here when they are stable and include them in the subsequent release.\n */\nexport const defaultSongbooks = [\n  {\n    name: \"Songs and Hymns of Life\",\n    bookId: \"shl\",\n    lyricsUrl: \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/metadata/shl.json\",\n    musicUrl: \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/images/shl/SHL_\",\n  },\n];\n\nlet cachedSongbooks = defaultSongbooks;\nlet songbooksFetched = false;\n\n/** For Developers only - flip to `true` to include beta books. Revert back to `false` before committing. */\nconst includeTestingSongbooks = false;\n\n/**\n * Gets list of supported songbooks from the above link.\n * Fetches from the list of songbooks or returns cached list if available.\n */\nexport async function getSongbooks(): Promise<Songbook[]> {\n  if (songbooksFetched) {\n    return cachedSongbooks;\n  }\n  const response = await fetch(songbooksListUrl);\n  if (response) {\n    const body = await response.json();\n    const stableBooks: Songbook[] = body[\"songbooks\"];\n    const testingBooks: Songbook[] = body[\"testing\"];\n    const songbooks = includeTestingSongbooks ? stableBooks.concat(testingBooks) : stableBooks;\n    cachedSongbooks = songbooks;\n    songbooksFetched = true;\n    return songbooks;\n  } else {\n    return defaultSongbooks;\n  }\n}\n\n/**\n * Get Songbook By Id.\n */\nexport async function getSongbookById(bookId: string): Promise<Songbook | undefined> {\n  const songbooks = await getSongbooks();\n  return songbooks.find((book) => book.bookId === bookId);\n}\n","import { IonButton, IonInput, IonItem, IonLabel, IonModal, IonTextarea } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\n\nimport { decrypt } from \"../utils/SecurityUtils\";\nimport { Octokit } from \"@octokit/rest\";\n\n/**\n * Feedback Screen.\n * Uses GitHub issues api to create issues directly in the Song repo.\n */\nconst FeedbackScreen: React.FC = () => {\n  const PRIVATE_KEY = \"jesus private key\";\n  // REPO_OWNER can be a github username or organization name\n  const REPO_OWNER = \"Church-Life-Apps\";\n  const REPO_NAME = \"Songs\";\n  const ENCRYPTED_TOKEN = \"U2FsdGVkX1+bPnD7qF/W1r3lCIYIwy88qJ1SO+d9HiCkYac2WeRs2MOpFHVq5TjdPNV0vrizHfRlMCgxInEAIQ==\";\n\n  // Sets up octokit (github api wrapper)\n  const octokit = new Octokit({ auth: decrypt(ENCRYPTED_TOKEN, PRIVATE_KEY) });\n\n  const [fromWhom, setFromWhom] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [title, setTitle] = useState<string>(\"\");\n  const [feedbackResponseText, setFeedbackResponseText] = useState<string>(\"\");\n  const [feedbackResponseModal, setShowFeedbackResponseModal] = useState<boolean>(false);\n\n  return (\n    <div id=\"feedbackFormDiv\">\n      <IonItem>\n        <IonLabel position=\"floating\">Name (Optional)</IonLabel>\n        <IonInput\n          type=\"text\"\n          value={fromWhom}\n          placeholder=\"Enter your name\"\n          onIonChange={(e) => setFromWhom(e.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n\n      <IonItem>\n        <IonLabel position=\"floating\">Subject/Title</IonLabel>\n        <IonInput\n          type=\"text\"\n          value={title}\n          placeholder=\"Enter Subject/Title\"\n          onIonChange={(e) => setTitle(e.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n\n      <IonItem>\n        <IonLabel position=\"floating\">What do you think?</IonLabel>\n        <IonTextarea\n          rows={7}\n          value={message}\n          placeholder=\"Enter feedback\"\n          onIonChange={(e) => setMessage(e.detail.value as string)}\n        ></IonTextarea>\n      </IonItem>\n\n      <IonButton expand=\"full\" onClick={createGithubIssue}>\n        Submit Feedback\n      </IonButton>\n\n      <IonModal id=\"feedbackResponseModal\" isOpen={feedbackResponseModal} onDidDismiss={clearResponseModal}>\n        <h1 className=\"center\">{feedbackResponseText}</h1>\n        <IonButton id=\"feedbackResponseOKButton\" onClick={clearResponseModal}>\n          OK\n        </IonButton>\n      </IonModal>\n    </div>\n  );\n\n  /**\n   * Creates a github issue with the feedback content.\n   */\n  function createGithubIssue() {\n    if (title === \"\" || message === \"\") {\n      setFeedbackResponseText(\"Please include a title/subject and a feedback message!\");\n    } else {\n      // using octokit rest smaller bundle size\n      const sentFromWhom = fromWhom || \"anonymous\";\n\n      octokit.rest.issues\n        .create({\n          owner: REPO_OWNER,\n          repo: REPO_NAME,\n          title: title,\n          body: `> ${message}\\n\\n— ${sentFromWhom}`,\n        })\n        .then(\n          function (response) {\n            console.debug(\"GitHub issue created successfully.\", response.status, response.data.body);\n            setFeedbackResponseText(\"Feedback Submitted Sucessfully, Thanks!\");\n          },\n          function (error) {\n            setFeedbackResponseText(`Error Submitting Feedback: ${error}`);\n            console.error(\"Error making GitHub issue: \", error);\n          }\n        );\n\n      clearForm();\n    }\n    setShowFeedbackResponseModal(true);\n  }\n\n  // Clears form fields.\n  function clearForm() {\n    setFromWhom(\"\");\n    setMessage(\"\");\n    setTitle(\"\");\n  }\n\n  // Clears and hides Response modal.\n  function clearResponseModal() {\n    setFeedbackResponseText(\"\");\n    setShowFeedbackResponseModal(false);\n  }\n};\n\nexport default FeedbackScreen;\n","/**\n * Helper functions for Security stuff.\n */\n\nimport CryptoJS from \"crypto-js\";\n\n/**\n * Uses AES to encrypt some text with the given private key.\n */\nexport function encrypt(normalText: string, privateKey: string): string {\n  return CryptoJS.AES.encrypt(normalText, privateKey).toString();\n}\n\n/**\n * Uses AES to decrypt some text with the given private key.\n */\nexport function decrypt(encryptedtext: string, privateKey: string): string {\n  return CryptoJS.AES.decrypt(encryptedtext, privateKey).toString(CryptoJS.enc.Utf8);\n}\n","import { IonButton, IonContent, IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport FeedbackForm from \"./FeedbackForm\";\n\n/**\n * Settings Page.\n */\nconst SettingsView: React.FC = () => {\n  const [chosenSetting, setChosenSetting] = useState<string>(\"\");\n\n  return (\n    <IonContent>\n      {/* To add another settings item, add another IonItem with an IonLabel. */}\n      {/* TODO: Add Font Size as an option. */}\n      {chosenSetting === \"\" ? (\n        <IonList>\n          <IonItem id=\"settingsTitle\">\n            <IonLabel>Settings</IonLabel>\n          </IonItem>\n          <IonItem>\n            <IonButton onClick={() => setChosenSetting(\"feedback\")}>Submit Feedback</IonButton>\n          </IonItem>\n        </IonList>\n      ) : null}\n\n      {chosenSetting === \"feedback\" ? <FeedbackForm /> : null}\n\n      {chosenSetting !== \"\" ? (\n        <IonButton color=\"light\" expand=\"full\" id=\"backToSettingsButton\" onClick={() => setChosenSetting(\"\")}>\n          Return to Settings\n        </IonButton>\n      ) : null}\n    </IonContent>\n  );\n};\n\nexport default SettingsView;\n","import { IonButton, IonTitle, IonToolbar, IonButtons, IonModal, IonIcon } from \"@ionic/react\";\nimport \"./Components.css\";\nimport {\n  documentTextOutline,\n  homeOutline,\n  musicalNotesOutline,\n  settingsOutline,\n  swapHorizontalOutline,\n} from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport SettingsView from \"../components/SettingsView\";\nimport { useParams } from \"react-router\";\nimport { getSongbookById } from \"../utils/SongUtils\";\n\ninterface NavigationBarProps {\n  backButtonOnClick?: () => void;\n  toggleSongModeOnClick?: () => void;\n}\n\nexport const defaultNavigationTitle = \"Choose a Songbook!\";\n\n/**\n * Navigation Bar Component\n */\nconst NavigationBar: React.FC<NavigationBarProps> = (props) => {\n  // whether or not to show settings modal\n  const [showSettingsModal, setShowSettingsModal] = useState<boolean>(false);\n  const [songbookName, setSongbookName] = useState<string>(defaultNavigationTitle);\n  const { bookId } = useParams<{ bookId: string }>();\n\n  useEffect(() => {\n    getSongbookById(bookId).then((book) => {\n      if (book) {\n        setSongbookName(book.name);\n      }\n    });\n  }, [bookId]);\n\n  return (\n    <IonToolbar>\n      <IonTitle id=\"appName\">{songbookName}</IonTitle>\n      <IonButtons slot=\"start\">{RenderBackButton()}</IonButtons>\n      <IonButtons slot=\"primary\">\n        {RenderToggleSongModeButton()}\n        {/* TODO: Put this Image/Lyric mode button into settings page. \n          This might require some react magic to get state from a child component */}\n        <IonButton onClick={() => setShowSettingsModal(true)}>\n          <IonIcon icon={settingsOutline} />\n        </IonButton>\n      </IonButtons>\n\n      {/* Settings Menu Popup  */}\n      <IonModal id=\"settingsModal\" isOpen={showSettingsModal} onDidDismiss={() => setShowSettingsModal(false)}>\n        <SettingsView />\n        <IonButton id=\"returnToHymnalButton\" onClick={() => setShowSettingsModal(false)}>\n          Back to Hymnal\n        </IonButton>\n      </IonModal>\n    </IonToolbar>\n  );\n\n  function RenderBackButton() {\n    if (!props.backButtonOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton onClick={props.backButtonOnClick}>\n        <IonIcon icon={homeOutline} />\n      </IonButton>\n    );\n  }\n\n  function RenderToggleSongModeButton() {\n    if (!props.toggleSongModeOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton id=\"songViewToggler\" onClick={props.toggleSongModeOnClick}>\n        <IonIcon icon={musicalNotesOutline} />\n        <IonIcon icon={swapHorizontalOutline} />\n        <IonIcon icon={documentTextOutline} />\n      </IonButton>\n    );\n  }\n};\n\nexport default NavigationBar;\n","import { IonContent, IonPage, IonHeader, IonCard, IonList, IonCardTitle } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { defaultSongbooks, getSongbooks, Songbook } from \"../utils/SongUtils\";\nimport \"./Pages.css\";\n/**\n * Home Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\n\nconst HomePage: React.FC = () => {\n  const history = useHistory();\n  const [songbooks, setSongbooks] = useState<Songbook[]>(defaultSongbooks);\n\n  useEffect(() => {\n    getSongbooks().then((books) => {\n      setSongbooks(books);\n    });\n  }, []);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar />\n      </IonHeader>\n\n      <IonContent>\n        {/* Redirect to book page until we add more book or make this page functional */}\n        <IonList>\n          {songbooks.map((it) => {\n            return generateSongbookCard(it);\n          })}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n\n  function generateSongbookCard(songbook: Songbook): JSX.Element {\n    return (\n      <IonCard\n        key={songbook.name}\n        onClick={() => {\n          history.push(songbook.bookId);\n        }}\n        className=\"songbookCardView\"\n        id={songbook.bookId}\n      >\n        <IonCardTitle>{songbook.name}</IonCardTitle>\n      </IonCard>\n    );\n  }\n};\nexport default HomePage;\n","import {\n  IonList,\n  IonCard,\n  IonCardTitle,\n  IonCardSubtitle,\n  IonLabel,\n  IonItem,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Song } from \"../utils/SongUtils\";\nimport \"./Components.css\";\n\ninterface SearchViewProps {\n  songs: Song[];\n}\n\n/**\n * Search View.\n */\nconst SearchView: React.FC<SearchViewProps> = (props: SearchViewProps) => {\n  const { bookId } = useParams<{ bookId: string }>();\n  const [songCards, setSongCards] = useState<JSX.Element[]>([]);\n  const [songCardsIterator] = useState(props.songs.entries());\n\n  const history = useHistory();\n\n  if (songCards.length === 0) {\n    LoadSongs(songCardsIterator, 20);\n  }\n  return songCards.length > 0 ? (\n    <div>\n      <IonList id=\"searchViewSongList\">{songCards}</IonList>\n      <IonInfiniteScroll onIonInfinite={LoadMoreSongs}>\n        <IonInfiniteScrollContent\n          loadingSpinner=\"bubbles\"\n          loadingText=\"Loading more songs...\"\n        ></IonInfiniteScrollContent>\n      </IonInfiniteScroll>\n    </div>\n  ) : (\n    <IonItem>\n      <IonLabel>No results found</IonLabel>\n    </IonItem>\n  );\n\n  function LoadMoreSongs(event: CustomEvent<void>) {\n    const target = event.target as HTMLIonInfiniteScrollElement;\n    if (!LoadSongs(songCardsIterator, 10)) {\n      target.disabled = true;\n    }\n    setSongCards(Array.from(songCards));\n    target.complete();\n  }\n\n  function LoadSongs(songIterator: IterableIterator<[number, Song]>, count: number): boolean {\n    while (count > 0) {\n      const nextSong = songIterator.next();\n      if (nextSong.done) {\n        return false;\n      }\n      const song = nextSong.value[1];\n      songCards.push(GenerateSongCard(song));\n      count--;\n    }\n\n    return true;\n  }\n\n  function GenerateSongCard(song: Song) {\n    return (\n      <IonCard\n        key={song.songNumber}\n        onClick={() => {\n          history.push(`/${bookId}/${song.songNumber}`);\n        }}\n        className=\"hymnalListView\"\n      >\n        <IonCardTitle>\n          {song.songNumber}. {song.title}\n        </IonCardTitle>\n        <IonCardSubtitle>{song.author}</IonCardSubtitle>\n      </IonCard>\n    );\n  }\n};\n\nexport default SearchView;\n","/**\n * Util functions for strings.\n */\n\n/**\n * Removes special characters from the string.\n */\nexport function removePunctuation(s: string): string {\n  return s.replace(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g, \"\");\n}\n\nconst stringSimilarity = require(\"string-similarity\"); // eslint-disable-line @typescript-eslint/no-var-requires\n\n/**\n * Returns a number between 0 and 1 based on how similar two strings are to each other (Case sensitive).\n * 0 = completely different.\n * 1 = the same string.\n */\nexport function getSimilarity(word: string, search: string): number {\n  return stringSimilarity.compareTwoStrings(removePunctuation(word.toString().toLowerCase()), search);\n}\n\nexport function tokenize(sentence: string): string[] {\n  return sentence.split(\" \");\n}\n\nexport function normalize(sentence: string): string {\n  return removePunctuation(sentence).toLowerCase().trim();\n}\n\n/**\n * Returns true if a string is a number, false otherwise.\n */\nexport function isNumeric(word: string): boolean {\n  return !isNaN(+word);\n}\n","import { getSongbookById, Song } from \"../utils/SongUtils\";\nimport { getSimilarity, isNumeric, normalize, tokenize } from \"../utils/StringUtils\";\n\n/**\n * File which handles retrieving and searching for songs.\n */\n\nconst songs = new Map<string, Song[]>();\n\n/**\n * Lightweight caches string tokenizations. These are reset on refresh.\n */\nconst normalizedLyrics: Map<number, string> = new Map<number, string>();\nconst tokenizedLyrics: Map<number, string[]> = new Map<number, string[]>();\n\n/**\n * Fetches the lyrics and stores it in memory as a variable.\n * Refreshing the page will cause another fetch.\n */\nasync function getOrfetchSongs(bookId: string): Promise<Song[]> {\n  const cachedSongs = songs.get(bookId);\n  if (cachedSongs === undefined) {\n    const songbook = await getSongbookById(bookId);\n    if (!songbook) {\n      console.error(\"No songbook found for id \" + bookId);\n      return [];\n    }\n    const response = await fetch(songbook.lyricsUrl);\n    const body = await response.json();\n    const songsForBook = body[songbook.name];\n    songs.set(bookId, songsForBook);\n    return songsForBook;\n  } else {\n    console.debug(\"Returning stored lyrics for book \" + bookId);\n    return cachedSongs;\n  }\n}\n\n/**\n * Gets number of songs in the songbook for bookId.\n */\nexport async function getNumSongsForBookId(bookId: string): Promise<number> {\n  const songs = await getOrfetchSongs(bookId);\n  return songs.length;\n}\n\n/**\n * Retrieves a single song based on song number.\n */\nexport async function getSong(number: number, bookId: string): Promise<Song> {\n  const songs = await getOrfetchSongs(bookId);\n  if (isNaN(number) || number < 0 || number > songs.length) {\n    return { title: \"\", author: \"\", songNumber: -1, lyrics: new Map(), presentation: \"\" };\n  } else {\n    if (!(songs[number - 1].lyrics instanceof Map)) {\n      songs[number - 1].lyrics = new Map(Object.entries(songs[number - 1].lyrics));\n    }\n    return songs[number - 1];\n  }\n}\n\n/**\n * Returns a list of songs filtered and sorted by how well they match the given searchString.\n */\nexport async function listSongs(searchString: string, bookId: string): Promise<Song[]> {\n  const songs = await getOrfetchSongs(bookId);\n  if (searchString === \"\") {\n    return songs;\n  } else if (isNumeric(searchString)) {\n    return songs.filter((song) => song.songNumber.toString().startsWith(searchString));\n  } else {\n    // Build a cache to speed up duplicate calls\n    const matchScores: Map<number, number> = new Map<number, number>();\n    songs.forEach((song) => {\n      matchScores.set(song.songNumber, getMatchScore(song, searchString));\n    });\n\n    console.log(matchScores);\n\n    return songs\n      .filter((song) => (matchScores.get(song.songNumber) as number) > 0)\n      .sort(\n        (song1, song2) => (matchScores.get(song2.songNumber) as number) - (matchScores.get(song1.songNumber) as number)\n      );\n  }\n}\n\n// TODO: Extract values like this to be configurable outside of code so we can tweak on the fly.\n\n// This is a very strict threshold. In order for two strings to have similarity > 0.9,\n// they need to either be exactly the same, or only 1 letter off for every 10 or so letters.\nconst similarityThreshold = 0.9;\n\n// If the entire search string is a substring of the title or author, we should give the highest score.\nconst titleMatchScore = 1000;\nconst authorMatchScore = 900;\n\n// Score for each word that matches title or author.\nconst titleTokenMatchScore = 100;\nconst authorTokenMatchScore = 90;\n\n// If the entire search string is a substring of the lyric line, add 10.\n// We want this to have more influence than token matches in title or author,\n// but less influence than a title/author match on the entire search string.\nconst lyricMatchScore = 500;\n\n// We want lyric token matches to help distinguish between songs, but not\n// override any title/author token matches, so we pick a very low number here.\nconst lyricTokenMatchScore = 1;\n\n/**\n * Returns a number based on how well the song matches the search string.\n *\n * Notes:\n * This has to be fast. Optimimzations may include some kind of predefined lookup dictionary,\n * or storing past searches.\n */\nfunction getMatchScore(song: Song, searchString: string): number {\n  let matchScore = 0;\n\n  const search = normalize(searchString);\n  const searchTokens = tokenize(search);\n\n  const title = normalize(song.title);\n  const titleTokens = tokenize(title);\n\n  const author = normalize(song.author);\n  const authorTokens = tokenize(author);\n\n  // Check matches in title\n  if (title.includes(search)) {\n    matchScore += titleMatchScore;\n  } else {\n    for (const word of titleTokens) {\n      for (const searchTerm of searchTokens) {\n        if (getSimilarity(word, searchTerm) > similarityThreshold) {\n          matchScore += titleTokenMatchScore;\n        }\n      }\n    }\n  }\n\n  // Check matches in author\n  if (author.includes(search)) {\n    matchScore += authorMatchScore;\n  } else {\n    for (const word of authorTokens) {\n      for (const searchTerm of searchTokens) {\n        if (getSimilarity(word, searchTerm) > similarityThreshold) {\n          matchScore += authorTokenMatchScore;\n        }\n      }\n    }\n  }\n\n  // Populate local client-side caches if they are empty.\n  if (!normalizedLyrics.has(song.songNumber)) {\n    normalizedLyrics.set(\n      song.songNumber,\n      Object.values(song.lyrics)\n        .map((s) => normalize(String(s)))\n        .join(\" \") as string\n    );\n  }\n\n  if (!tokenizedLyrics.has(song.songNumber)) {\n    tokenizedLyrics.set(song.songNumber, tokenize(normalizedLyrics.get(song.songNumber) as string));\n  }\n\n  // Check matches in lyrics\n  if ((normalizedLyrics.get(song.songNumber) as string).includes(search)) {\n    matchScore += lyricMatchScore;\n  } else {\n    for (const word of tokenizedLyrics.get(song.songNumber) as string[]) {\n      for (const searchTerm of searchTokens) {\n        if (getSimilarity(word, searchTerm) > similarityThreshold) {\n          matchScore += lyricTokenMatchScore;\n        }\n      }\n    }\n  }\n\n  return matchScore;\n}\n","import { IonContent, IonPage, IonHeader, IonInput, IonItem } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useEffect, useState } from \"react\";\nimport SearchView from \"../components/SearchView\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Song } from \"../utils/SongUtils\";\nimport { listSongs } from \"../service/SongsService\";\n\n/**\n * Book Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst BookPage: React.FC = () => {\n  // the search string inputted by the user\n  const [searchString, setSearchString] = useState<string>(\"\");\n  const [songs, setSongs] = useState<Song[]>([]);\n  const { bookId } = useParams<{ bookId: string }>();\n\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      listSongs(searchString, bookId)\n        .then((songs) => {\n          setSongs(songs);\n        })\n        .catch((e) => console.error(e));\n    }, 200);\n    return () => clearTimeout(timeOutId);\n  }, [searchString]);\n\n  const history = useHistory();\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar backButtonOnClick={() => history.push(\"/\")} />\n      </IonHeader>\n      <IonItem>\n        <IonInput\n          id=\"searchBar\"\n          type=\"search\"\n          value={searchString}\n          placeholder=\"Search for a song\"\n          onIonChange={(word) => setSearchString(word.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n      {/* The key here will trigger a re-initialization of a new searchView when it changes. */}\n      <IonContent>\n        <SearchView key={searchString + songs.length} songs={songs} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default BookPage;\n","import { getPlatforms, isPlatform } from \"@ionic/react\";\n\n/**\n * Platform Utils:\n *\n * Android: Current platforms: android,cordova,capacitor,mobile,hybrid\n * iOS:\n * Chrome Mobile Mode: Current platforms: android,tablet,mobile,mobileweb\n * Chrome Regular Desktop: Current platforms: desktop\n */\n\n/**\n * Returns true if this is app currently running on an iOS device.\n */\nexport function isIOS(): boolean {\n  return isPlatform(\"ios\");\n}\n\n/**\n * Returns true if this app is currently running on an Android device.\n */\nexport function isAndroid(): boolean {\n  return isPlatform(\"android\");\n}\n\n/**\n * Returns true if this app is currently running on the desktop.\n */\nexport function isBrowser(): boolean {\n  return isPlatform(\"desktop\");\n}\n\n/**\n * Returns true if the platform supports Cordova.\n *\n * * SQLite requires Cordova.\n */\nexport function isCordova(): boolean {\n  return isPlatform(\"cordova\");\n}\n\nexport function logPlatforms(): void {\n  console.debug(\"Current platforms: \" + getPlatforms());\n}\n","import ReactGA from \"react-ga\";\n\nconst StreamID = \"UA-183902236-1\";\n\nexport const initGA = (): void => {\n  ReactGA.initialize(StreamID);\n};\n\nexport const PageView = (): void => {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n  console.debug(\"Page viewed\");\n};\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category\n * @param {string} action\n * @param {string} label\n */\n\nexport const Event = (category: string, action: string, label: string): void => {\n  ReactGA.event({\n    category: category,\n    action: action,\n    label: label,\n  });\n};\n","import { SongViewMode } from \"../utils/SongUtils\";\nimport { Event } from \"./GoogleAnalytics\";\n\nexport function triggerSongView(songNumber: number, mode: SongViewMode): void {\n  try {\n    Event(\"INTERACTION\", `Song viewed(${SongViewMode[mode]})`, songNumber.toString());\n    console.debug(`Song number: ${String(songNumber)} viewed in ${SongViewMode[mode]} mode`);\n  } catch (e) {\n    console.error(e);\n  }\n}\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonCardTitle,\n  IonText,\n  IonCardSubtitle,\n} from \"@ionic/react\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { PLACEHOLDER_SONG, Song, SongViewMode } from \"../utils/SongUtils\";\nimport \"./Components.css\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\nimport { getSong } from \"../service/SongsService\";\nimport { useParams } from \"react-router\";\n\ninterface LyricViewProps {\n  songNumber: number;\n}\n\n/**\n * Lyric Viewer React Functional Component.\n */\nconst LyricView: React.FC<LyricViewProps> = (props: LyricViewProps) => {\n  const [song, setSong] = useState<Song>(PLACEHOLDER_SONG);\n  const { bookId, songId } = useParams<{ bookId: string; songId: string }>();\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Lyrics);\n    getSong(props.songNumber, bookId).then((song) => {\n      setSong(song);\n    });\n  }, [songId]);\n\n  return (\n    <IonGrid>\n      <IonRow class=\"ion-justify-content-center\">\n        <IonCol size=\"12\" size-lg=\"8\" size-xl=\"6\">\n          <IonCard id=\"lyricViewCard\" className=\"ion-padding\">\n            <IonCardHeader className=\"ion-text-center\">\n              <IonCardTitle key=\"title\">{song?.title}</IonCardTitle>\n              <IonCardSubtitle key=\"author\">By {song?.author}</IonCardSubtitle>\n            </IonCardHeader>\n            <IonCardContent key=\"lyrics\">{song ? getLyrics(song) : song}</IonCardContent>\n          </IonCard>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n\n  /**\n   * Parses all verse of the song to a list of JSX elements.\n   */\n  function getLyrics(song: Song): JSX.Element[] {\n    const lyrics: JSX.Element[] = [];\n    let key = 0;\n\n    const songLyrics = song.lyrics;\n    const presentationOrder = song.presentation?.split(\" \");\n\n    // if the song has a presentation order defined, use it;\n    // otherwise, present in written order\n    if (presentationOrder != null) {\n      presentationOrder.forEach((verseNumber) => {\n        const verseName: string = getVerseText(verseNumber);\n        const verseLyrics: string[] = songLyrics.get(verseNumber) || [\"\"];\n\n        lyrics.push(buildLyricBlock(verseName, verseLyrics, key++));\n      });\n    } else {\n      // separate chorus(es) and normal verses\n      const choruses: Map<string, string[]> = new Map();\n      const nonChoruses: Map<string, string[]> = new Map();\n      songLyrics.forEach((verseLyrics, verseNumber) => {\n        if (verseNumber.startsWith(\"c\")) {\n          choruses.set(verseNumber, verseLyrics);\n        } else {\n          nonChoruses.set(verseNumber, verseLyrics);\n        }\n      });\n\n      let mainChorusNumber: string, mainChorusLyrics: string[];\n      if (choruses.size) {\n        [mainChorusNumber, mainChorusLyrics] = choruses.entries().next().value;\n      }\n      nonChoruses.forEach((verseLyrics, verseNumber) => {\n        const verseName = getVerseText(verseNumber);\n        lyrics.push(buildLyricBlock(verseName, verseLyrics, key++));\n\n        if (mainChorusNumber) {\n          // insert chorus 1 between each verse\n          const chorusName = getVerseText(mainChorusNumber);\n          lyrics.push(buildLyricBlock(chorusName, mainChorusLyrics, key++));\n        }\n      });\n\n      // append all choruses except for chorus 1\n      choruses.forEach((chorusLyrics, chorusNumber) => {\n        if (chorusNumber === mainChorusNumber) {\n          return;\n        }\n        const chorusName = getVerseText(chorusNumber);\n        lyrics.push(buildLyricBlock(chorusName, chorusLyrics, key++));\n      });\n    }\n    return lyrics;\n  }\n\n  function getVerseText(verse: string) {\n    return verse\n      .toLowerCase()\n      .replace(\"v\", \"Verse \")\n      .replace(\"c\", \"Chorus \")\n      .replace(\"b\", \"Bridge \")\n      .replace(\"p\", \"Pre-Chorus \");\n  }\n\n  function buildLyricBlock(name: string, lines: string[], key: number) {\n    const lyricsElement: JSX.Element[] = lines.map((line, index) => <p key={index}>{line}</p>);\n    return (\n      <Fragment key={key}>\n        <div className=\"ion-margin-vertical\"></div>\n        <h5 className=\"ion-margin-top\">{name}</h5>\n        <IonText className=\"lyricVerse\" color=\"dark\">\n          {lyricsElement}\n        </IonText>\n      </Fragment>\n    );\n  }\n};\n\nexport default LyricView;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Components.css\";\nimport { getSongbookById, makeThreeDigits, Songbook, SongViewMode } from \"../utils/SongUtils\";\nimport { IonToggle } from \"@ionic/react\";\nimport { isBrowser } from \"../utils/PlatformUtils\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\nimport { useParams } from \"react-router\";\n\nconst imageSuffix = \".png\";\nconst alt = \"No Song Found\";\n\nconst songsWithTwoTunes = [156, 216, 278, 478];\n\n// Props are kind of like the parameters for the constructor of this class.\ninterface MusicViewProps {\n  songNumber: number;\n}\n\n/**\n * Song Viewer React Functional Component.\n */\nconst MusicView: React.FC<MusicViewProps> = (props: MusicViewProps) => {\n  const widthPixels = isBrowser() ? window.innerWidth / 2 : window.innerWidth;\n  const [secondTune, setSecondTune] = useState<boolean>(false);\n  const [width, setWidth] = useState<number>(widthPixels);\n  const [zoomed, setZoomed] = useState<boolean>(false);\n  const [songbook, setSongbook] = useState<Songbook>();\n  const { bookId } = useParams<{ bookId: string }>();\n\n  // Probably update this behavior later if other hymnals have songs with 2 tunes also.\n  const songHasTwoTunes = songsWithTwoTunes.includes(props.songNumber) && bookId === \"shl\";\n  const secondTuneSuffix = songHasTwoTunes && secondTune ? \"-B\" : \"\";\n\n  const url = songbook?.musicUrl + makeThreeDigits(props.songNumber) + secondTuneSuffix + imageSuffix;\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Music);\n  }, [props.songNumber]);\n\n  useEffect(() => {\n    getSongbookById(bookId).then((book) => {\n      setSongbook(book);\n    });\n  }, [bookId]);\n\n  // TODO: Add Pinch and Zoom to image.\n  return (\n    <div>\n      {/* Second Tune Toggler  */}\n      {songHasTwoTunes && (\n        <div id=\"songToggler\">\n          <IonToggle checked={secondTune} onIonChange={() => setSecondTune(!secondTune)} />\n        </div>\n      )}\n\n      {/* image */}\n      <img\n        style={{ width: width }}\n        id=\"musicView\"\n        onDoubleClick={() => {\n          if (zoomed) {\n            setWidth(widthPixels);\n          } else setWidth(widthPixels * 2);\n          setZoomed(!zoomed);\n        }}\n        src={url}\n        alt={alt}\n      />\n    </div>\n  );\n};\n\nexport default MusicView;\n","import { IonIcon, IonContent, IonPage, IonHeader, IonFab, IonFabButton } from \"@ionic/react\";\nimport { SongViewMode } from \"../utils/SongUtils\";\nimport { isBrowser } from \"../utils/PlatformUtils\";\nimport LyricView from \"../components/LyricView\";\nimport MusicView from \"../components/MusicView\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { arrowBackCircleOutline, arrowForwardCircleOutline } from \"ionicons/icons\";\n//Import Event tracking\nimport { Event } from \"../tracking/GoogleAnalytics\";\nimport { getNumSongsForBookId } from \"../service/SongsService\";\n\n/**\n * Song Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst SongPage: React.FC = () => {\n  const { bookId, songId } = useParams<{ bookId: string; songId: string }>();\n  const history = useHistory();\n  // when in song view, use music view or lyrics view\n  const [songViewMode, setSongViewMode] = useState<SongViewMode>(SongViewMode.Lyrics);\n  const [songBookLength, setSongBookLength] = useState<number>(0);\n\n  useEffect(() => {\n    getNumSongsForBookId(bookId).then((size) => setSongBookLength(size));\n  }, [bookId]);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar\n          backButtonOnClick={() => {\n            history.push(`/${bookId}`);\n          }}\n          toggleSongModeOnClick={ToggleSongMode}\n        />\n      </IonHeader>\n\n      <IonContent>\n        {/* TODO: Add error handling in case of non number song Id */}\n        {isBrowser() && RenderPrevButton(+songId)}\n        {RenderSong(+songId)}\n        {isBrowser() && RenderNextButton(+songId)}\n      </IonContent>\n    </IonPage>\n  );\n\n  function RenderSong(songNumber: number) {\n    if (songViewMode === SongViewMode.Music) {\n      return <MusicView songNumber={songNumber} />;\n    } else {\n      return <LyricView songNumber={songNumber} />;\n    }\n  }\n\n  function ToggleSongMode() {\n    if (songViewMode === SongViewMode.Music) {\n      setSongViewMode(SongViewMode.Lyrics);\n    } else {\n      setSongViewMode(SongViewMode.Music);\n    }\n    try {\n      Event(\"INTERACTION\", \"Songmode is toggled\", \"SongMode_Toggle\");\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  function RenderPrevButton(songNumber: number) {\n    if (songNumber > 1) {\n      return (\n        <IonFab id=\"prevButton\" vertical=\"center\" horizontal=\"start\" slot=\"fixed\">\n          <IonFabButton\n            color=\"medium\"\n            onClick={() => {\n              history.push(`/${bookId}/${Math.min(songNumber - 1, songBookLength)}`);\n            }}\n          >\n            <IonIcon class=\"pageTurnButton\" icon={arrowBackCircleOutline} />\n          </IonFabButton>\n        </IonFab>\n      );\n    }\n  }\n\n  function RenderNextButton(songNumber: number) {\n    if (songNumber < songBookLength) {\n      return (\n        <IonFab id=\"nextButton\" vertical=\"center\" horizontal=\"end\" slot=\"fixed\">\n          <IonFabButton\n            color=\"medium\"\n            onClick={() => {\n              history.push(`/${bookId}/${Math.max(songNumber + 1, 1)}`);\n            }}\n          >\n            <IonIcon class=\"pageTurnButton\" icon={arrowForwardCircleOutline} />\n          </IonFabButton>\n        </IonFab>\n      );\n    }\n  }\n};\n\nexport default SongPage;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\nimport HomePage from \"./pages/HomePage\";\nimport BookPage from \"./pages/BookPage\";\nimport SongPage from \"./pages/SongPage\";\nimport { initGA, PageView } from \"./tracking/GoogleAnalytics\";\nimport { logPlatforms } from \"./utils/PlatformUtils\";\n\ntry {\n  initGA();\n  PageView();\n} catch (e) {\n  console.error(e);\n}\n\nconst App: React.FC = () => {\n  logPlatforms();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/:bookId\" component={BookPage} exact />\n        <Route path=\"/:bookId/:songId\" component={SongPage} exact />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t131,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t132,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t133,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t134,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t135,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t136,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t137,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t138,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t139,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t140,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t141,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t142,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t143,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t144,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t145,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t146,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t147,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t148,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t149,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t150,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t151,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t152,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t153,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t154,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t155,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t156,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t157,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t158,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t159,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t160,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t161,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t162,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t163,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t164,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t165,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t166,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t167,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t168,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t169,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t170,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t171,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t172,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t173,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 90;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t174,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 92;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}