{"version":3,"sources":["utils/SongUtils.tsx","components/FeedbackForm.tsx","utils/SecurityUtils.tsx","components/SettingsView.tsx","components/NavigationBar.tsx","pages/HomePage.tsx","components/SearchView.tsx","utils/StringUtils.tsx","service/SongsService.tsx","pages/BookPage.tsx","tracking/GoogleAnalytics.tsx","tracking/EventFunctions.tsx","components/LyricView.tsx","components/MusicView.tsx","utils/PlatformUtils.tsx","pages/SongPage.tsx","App.tsx","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["SongViewMode","FeedbackScreen","encryptedtext","privateKey","useState","fromWhom","setFromWhom","message","setMessage","feedbackResponseText","setFeedbackResponseText","feedbackResponseModal","setShowFeedbackResponseModal","emailjs","init","CryptoJS","AES","decrypt","toString","enc","Utf8","id","position","type","value","placeholder","onIonChange","e","detail","rows","expand","onClick","templateParams","from_name","send","then","response","console","debug","status","text","error","isOpen","onDidDismiss","clearResponseModal","className","SettingsView","chosenSetting","setChosenSetting","FeedbackForm","color","NavigationBar","props","showSettingsModal","setShowSettingsModal","AppName","slot","backButtonOnClick","icon","homeOutline","RenderBackButton","toggleSongModeOnClick","musicalNotesOutline","swapHorizontalOutline","documentTextOutline","RenderToggleSongModeButton","settingsOutline","HomePage","to","SearchView","bookId","useParams","songCards","setSongCards","songs","entries","songCardsIterator","history","useHistory","length","LoadSongs","onIonInfinite","event","target","disabled","Array","from","complete","loadingSpinner","loadingText","songIterator","count","nextSong","next","done","song","push","GenerateSongCard","songNumber","title","author","SHL_RESOURCE_JSON_KEY","shlJsonUrl","PLACEHOLDER_SONG","lyrics","Map","removePunctuation","s","replace","stringSimilarity","require","getSimilarity","word","search","compareTwoStrings","toLowerCase","tokenize","sentence","split","normalize","trim","isNumeric","isNaN","shlSongs","undefined","normalizedLyrics","tokenizedLyrics","getOrfetchSongs","a","fetch","json","body","number","JSON","parse","searchString","filter","startsWith","matchScores","forEach","set","getMatchScore","log","get","sort","song1","song2","matchScore","searchTokens","titleTokens","authorTokens","includes","has","Object","values","map","String","join","BookPage","setSearchString","setSongs","useEffect","timeOutId","setTimeout","listSongs","clearTimeout","Event","category","action","label","ReactGA","triggerSongView","mode","LyricView","setSong","Lyrics","getSong","class","size","key","songLyrics","verseKeys","keys","lyricBlocks","i","verseKey","verseLyrics","verse","line","getLyrics","songsWithTwoTunes","MusicView","num","widthPixels","isPlatform","window","innerWidth","secondTune","setSecondTune","width","setWidth","zoomed","setZoomed","songHasTwoTunes","secondTuneSuffix","url","baseUrl","Music","checked","style","onDoubleClick","src","alt","SongPage","songId","songViewMode","setSongViewMode","initialize","pageview","location","pathname","App","getPlatforms","path","component","exact","ReactDOM","render","document","getElementById","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","module","exports"],"mappings":"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","file":"static/js/main.814275e0.chunk.js","sourcesContent":["/**\n * Helpers for Song Related things.\n *\n * Write the helper function here, and then use them by importing it by relative path like:\n *\n * import { makeThreeDigits } from '../utils/SongUtils'\n */\n\nexport const SHL_RESOURCE_JSON_KEY = \"Songs and Hymns of Life\";\n\nexport const shlJsonUrl =\n  \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/metadata/shl.json\";\n\nexport const SHL_BOOK_ID = \"shl\";\n\n/**\n * Prepends 0s onto a 1 or 2 digit number to make it look like a 3 digit number.\n */\nexport function makeThreeDigits(num: number): string {\n  if (num < 10) {\n    return `00${num}`;\n  } else if (num < 100) {\n    return `0${num}`;\n  } else {\n    return `${num}`;\n  }\n}\n\nexport enum SongViewMode {\n  Music,\n  Lyrics,\n}\n\n/**\n * Fields from the shl.json resource file.\n * Add more fields here when they are required in the app.\n */\nexport interface Song {\n  title: string;\n  author: string;\n  songNumber: number;\n  lyrics: Map<string, string[]>;\n}\n\n// Placeholder blank song.\nexport const PLACEHOLDER_SONG: Song = { title: \"\", author: \"\", songNumber: 0, lyrics: new Map() };\n","import { IonButton, IonInput, IonItem, IonLabel, IonModal, IonTextarea } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport emailjs from \"emailjs-com\";\nimport { decrypt } from \"../utils/SecurityUtils\";\n\n/**\n * Feedback Screen.\n *\n * Uses EmailJS as a service to send emails.\n * This class will send actual emails when people have feedback.\n */\nconst FeedbackScreen: React.FC = () => {\n  const ENCRYPTED_USER_ID = \"U2FsdGVkX19ijiVnA6XtmJ4wa/RL9NngWwn4uKfq6gO+4ZI/V1F/RCYL4REfk0tZ\";\n  const PRIVATE_KEY = \"jesus private key\";\n  const SERVICE_ID = \"hymnal_app_service_id\";\n  const EMAIL_TEMPLATE = \"template_z4z7bhi\";\n\n  const [fromWhom, setFromWhom] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [feedbackResponseText, setFeedbackResponseText] = useState<string>(\"\");\n  const [feedbackResponseModal, setShowFeedbackResponseModal] = useState<boolean>(false);\n\n  emailjs.init(decrypt(ENCRYPTED_USER_ID, PRIVATE_KEY));\n\n  return (\n    <div id=\"feedbackFormDiv\">\n      <IonItem>\n        <IonLabel position=\"floating\">Name</IonLabel>\n        <IonInput\n          type=\"text\"\n          value={fromWhom}\n          placeholder=\"Enter your name\"\n          onIonChange={(e) => setFromWhom(e.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel position=\"floating\">What do you think?</IonLabel>\n        <IonTextarea\n          rows={7}\n          value={message}\n          placeholder=\"Enter feedback\"\n          onIonChange={(e) => setMessage(e.detail.value as string)}\n        ></IonTextarea>\n      </IonItem>\n\n      <IonButton expand=\"full\" onClick={sendEmail}>\n        Submit Feedback\n      </IonButton>\n\n      <IonModal id=\"feedbackResponseModal\" isOpen={feedbackResponseModal} onDidDismiss={clearResponseModal}>\n        <h1 className=\"center\">{feedbackResponseText}</h1>\n        <IonButton id=\"feedbackResponseOKButton\" onClick={clearResponseModal}>\n          OK\n        </IonButton>\n      </IonModal>\n    </div>\n  );\n\n  /**\n   * Sends an email to the hymnal dev team when someone has feedback.\n   */\n  function sendEmail() {\n    const templateParams = {\n      from_name: fromWhom,\n      message: message,\n    };\n    if (message === \"\" || fromWhom === \"\") {\n      setFeedbackResponseText(\"Please tell us your name and feedback message!\");\n    } else {\n      emailjs.send(SERVICE_ID, EMAIL_TEMPLATE, templateParams).then(\n        function (response) {\n          console.debug(\"Email sent successfully.\", response.status, response.text);\n          setFeedbackResponseText(\"Feedback Submitted Sucessfully, Thanks!\");\n        },\n        function (error) {\n          setFeedbackResponseText(`Error Submitting Feedback: ${error}`);\n          console.error(\"Error sending email: \", error);\n        }\n      );\n      clearForm();\n    }\n    setShowFeedbackResponseModal(true);\n  }\n\n  // Clears form fields.\n  function clearForm() {\n    setFromWhom(\"\");\n    setMessage(\"\");\n  }\n\n  // Clears and hides Response modal.\n  function clearResponseModal() {\n    setFeedbackResponseText(\"\");\n    setShowFeedbackResponseModal(false);\n  }\n};\n\nexport default FeedbackScreen;\n","/**\n * Helper functions for Security stuff.\n */\n\nimport CryptoJS from \"crypto-js\";\n\n/**\n * Uses AES to encrypt some text with the given private key.\n */\nexport function encrypt(normalText: string, privateKey: string): string {\n  return CryptoJS.AES.encrypt(normalText, privateKey).toString();\n}\n\n/**\n * Uses AES to decrypt some text with the given private key.\n */\nexport function decrypt(encryptedtext: string, privateKey: string): string {\n  return CryptoJS.AES.decrypt(encryptedtext, privateKey).toString(CryptoJS.enc.Utf8);\n}\n","import { IonButton, IonContent, IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport FeedbackForm from \"./FeedbackForm\";\n\n/**\n * Settings Page.\n */\nconst SettingsView: React.FC = () => {\n  const [chosenSetting, setChosenSetting] = useState<string>(\"\");\n\n  return (\n    <IonContent>\n      {/* To add another settings item, add another IonItem with an IonLabel. */}\n      {/* TODO: Add Font Size as an option. */}\n      {chosenSetting === \"\" ? (\n        <IonList>\n          <IonItem id=\"settingsTitle\">\n            <IonLabel>Settings</IonLabel>\n          </IonItem>\n          <IonItem>\n            <IonButton onClick={() => setChosenSetting(\"feedback\")}>Submit Feedback</IonButton>\n          </IonItem>\n        </IonList>\n      ) : null}\n\n      {chosenSetting === \"feedback\" ? <FeedbackForm /> : null}\n\n      {chosenSetting !== \"\" ? (\n        <IonButton color=\"light\" expand=\"full\" id=\"backToSettingsButton\" onClick={() => setChosenSetting(\"\")}>\n          Return to Settings\n        </IonButton>\n      ) : null}\n    </IonContent>\n  );\n};\n\nexport default SettingsView;\n","import { IonButton, IonTitle, IonToolbar, IonButtons, IonModal, IonIcon } from \"@ionic/react\";\nimport \"./Components.css\";\nimport {\n  documentTextOutline,\n  homeOutline,\n  musicalNotesOutline,\n  settingsOutline,\n  swapHorizontalOutline,\n} from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport SettingsView from \"../components/SettingsView\";\nimport { AppName } from \"../App\";\n\ninterface NavigationBarProps {\n  backButtonOnClick?: () => void;\n  toggleSongModeOnClick?: () => void;\n}\n\n/**\n * Navigation Bar Component\n */\nconst NavigationBar: React.FC<NavigationBarProps> = (props) => {\n  // whether or not to show settings modal\n  const [showSettingsModal, setShowSettingsModal] = useState<boolean>(false);\n\n  return (\n    <IonToolbar>\n      {/* [eric] we can probably come up with a better name, right? */}\n      <IonTitle id=\"appName\">{AppName}</IonTitle>\n      <IonButtons slot=\"start\">{RenderBackButton()}</IonButtons>\n      <IonButtons slot=\"primary\">\n        {RenderToggleSongModeButton()}\n        {/* TODO: Put this Image/Lyric mode button into settings page. \n          This might require some react magic to get state from a child component */}\n        <IonButton onClick={() => setShowSettingsModal(true)}>\n          <IonIcon icon={settingsOutline} />\n        </IonButton>\n      </IonButtons>\n\n      {/* Settings Menu Popup  */}\n      <IonModal id=\"settingsModal\" isOpen={showSettingsModal} onDidDismiss={() => setShowSettingsModal(false)}>\n        <SettingsView />\n        <IonButton id=\"returnToHymnalButton\" onClick={() => setShowSettingsModal(false)}>\n          Back to Hymnal\n        </IonButton>\n      </IonModal>\n    </IonToolbar>\n  );\n\n  function RenderBackButton() {\n    if (!props.backButtonOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton onClick={props.backButtonOnClick}>\n        <IonIcon icon={homeOutline} />\n      </IonButton>\n    );\n  }\n\n  function RenderToggleSongModeButton() {\n    if (!props.toggleSongModeOnClick) {\n      return null;\n    }\n\n    return (\n      <IonButton id=\"songViewToggler\" onClick={props.toggleSongModeOnClick}>\n        <IonIcon icon={musicalNotesOutline} />\n        <IonIcon icon={swapHorizontalOutline} />\n        <IonIcon icon={documentTextOutline} />\n      </IonButton>\n    );\n  }\n};\n\nexport default NavigationBar;\n","import { IonContent, IonPage, IonHeader } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React from \"react\";\nimport { Redirect } from \"react-router\";\n\n/**\n * Home Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst HomePage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar />\n      </IonHeader>\n\n      <IonContent>\n        {/* Redirect to book page until we add more book or make this page functional */}\n        <Redirect to=\"shl\" />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default HomePage;\n","import {\n  IonList,\n  IonCard,\n  IonCardTitle,\n  IonCardSubtitle,\n  IonLabel,\n  IonItem,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Song } from \"../utils/SongUtils\";\nimport \"./Components.css\";\n\ninterface SearchViewProps {\n  songs: Song[];\n}\n\n/**\n * Search View.\n */\nconst SearchView: React.FC<SearchViewProps> = (props: SearchViewProps) => {\n  const { bookId } = useParams<{ bookId: string }>();\n  const [songCards, setSongCards] = useState<JSX.Element[]>([]);\n  const [songCardsIterator] = useState(props.songs.entries());\n\n  const history = useHistory();\n\n  if (songCards.length === 0) {\n    LoadSongs(songCardsIterator, 20);\n  }\n  return songCards.length > 0 ? (\n    <div>\n      <IonList id=\"searchViewSongList\">{songCards}</IonList>\n      <IonInfiniteScroll onIonInfinite={LoadMoreSongs}>\n        <IonInfiniteScrollContent\n          loadingSpinner=\"bubbles\"\n          loadingText=\"Loading more songs...\"\n        ></IonInfiniteScrollContent>\n      </IonInfiniteScroll>\n    </div>\n  ) : (\n    <IonItem>\n      <IonLabel>No results found</IonLabel>\n    </IonItem>\n  );\n\n  function LoadMoreSongs(event: CustomEvent<void>) {\n    const target = event.target as HTMLIonInfiniteScrollElement;\n    if (!LoadSongs(songCardsIterator, 10)) {\n      target.disabled = true;\n    }\n    setSongCards(Array.from(songCards));\n    target.complete();\n  }\n\n  function LoadSongs(songIterator: IterableIterator<[number, Song]>, count: number): boolean {\n    while (count > 0) {\n      const nextSong = songIterator.next();\n      if (nextSong.done) {\n        return false;\n      }\n      const song = nextSong.value[1];\n      songCards.push(GenerateSongCard(song));\n      count--;\n    }\n\n    return true;\n  }\n\n  function GenerateSongCard(song: Song) {\n    return (\n      <IonCard\n        key={song.songNumber}\n        onClick={() => {\n          history.push(`/${bookId}/${song.songNumber}`);\n        }}\n        className=\"hymnalListView\"\n      >\n        <IonCardTitle>\n          {song.songNumber}. {song.title}\n        </IonCardTitle>\n        <IonCardSubtitle>{song.author}</IonCardSubtitle>\n      </IonCard>\n    );\n  }\n};\n\nexport default SearchView;\n","/**\n * Util functions for strings.\n */\n\n/**\n * Removes special characters from the string.\n */\nexport function removePunctuation(s: string): string {\n  return s.replace(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g, \"\");\n}\n\nconst stringSimilarity = require(\"string-similarity\"); // eslint-disable-line @typescript-eslint/no-var-requires\n\n/**\n * Returns a number between 0 and 1 based on how similar two strings are to each other (Case sensitive).\n * 0 = completely different.\n * 1 = the same string.\n */\nexport function getSimilarity(word: string, search: string): number {\n  return stringSimilarity.compareTwoStrings(removePunctuation(word.toString().toLowerCase()), search);\n}\n\nexport function tokenize(sentence: string): string[] {\n  return sentence.split(\" \");\n}\n\nexport function normalize(sentence: string): string {\n  return removePunctuation(sentence).toLowerCase().trim();\n}\n\n/**\n * Returns true if a string is a number, false otherwise.\n */\nexport function isNumeric(word: string): boolean {\n  return !isNaN(+word);\n}\n","import { shlJsonUrl, SHL_RESOURCE_JSON_KEY, Song } from \"../utils/SongUtils\";\nimport { getSimilarity, isNumeric, normalize, tokenize } from \"../utils/StringUtils\";\n\n/**\n * File which handles retrieving and searching for songs.\n */\n\nlet shlSongs: Song[] | undefined = undefined;\n\n/**\n * Lightweight caches string tokenizations. These are reset on refresh.\n */\nconst normalizedLyrics: Map<number, string> = new Map<number, string>();\nconst tokenizedLyrics: Map<number, string[]> = new Map<number, string[]>();\n\n/**\n * Fetches the lyrics and stores it in memory as a variable.\n * Refreshing the page will cause another fetch.\n */\nasync function getOrfetchSongs(): Promise<Song[]> {\n  if (shlSongs === undefined) {\n    const response = await fetch(shlJsonUrl);\n    const body = await response.json();\n    const songs = body[SHL_RESOURCE_JSON_KEY];\n    shlSongs = songs;\n    console.debug(\"Fetching lyrics\");\n    return songs;\n  } else {\n    console.debug(\"Returning stored lyrics\");\n    return shlSongs;\n  }\n}\n\n/**\n * Retrieves a single song based on song number.\n */\nexport async function getSong(number: number): Promise<Song> {\n  const songs = await getOrfetchSongs();\n  if (number < 0 || number >= songs.length) {\n    return { title: \"\", author: \"\", songNumber: -1, lyrics: JSON.parse(\"{}\") };\n  } else {\n    return songs[number - 1];\n  }\n}\n\n/**\n * Returns a list of songs filtered and sorted by how well they match the given searchString.\n */\nexport async function listSongs(searchString: string): Promise<Song[]> {\n  const songs = await getOrfetchSongs();\n  if (searchString === \"\") {\n    return songs;\n  } else if (isNumeric(searchString)) {\n    return songs.filter((song) => song.songNumber.toString().startsWith(searchString));\n  } else {\n    // Build a cache to speed up duplicate calls\n    const matchScores: Map<number, number> = new Map<number, number>();\n    songs.forEach((song) => {\n      matchScores.set(song.songNumber, getMatchScore(song, searchString));\n    });\n\n    console.log(matchScores);\n\n    return songs\n      .filter((song) => (matchScores.get(song.songNumber) as number) > 0)\n      .sort(\n        (song1, song2) => (matchScores.get(song2.songNumber) as number) - (matchScores.get(song1.songNumber) as number)\n      );\n  }\n}\n\n// TODO: Extract values like this to be configurable outside of code so we can tweak on the fly.\n\n// This is a very strict threshold. In order for two strings to have similarity > 0.9,\n// they need to either be exactly the same, or only 1 letter off for every 10 or so letters.\nconst similarityThreshold = 0.9;\n\n// If the entire search string is a substring of the title or author, we should give the highest score.\nconst titleMatchScore = 1000;\nconst authorMatchScore = 900;\n\n// Score for each word that matches title or author.\nconst titleTokenMatchScore = 100;\nconst authorTokenMatchScore = 90;\n\n// If the entire search string is a substring of the lyric line, add 10.\n// We want this to have more influence than token matches in title or author,\n// but less influence than a title/author match on the entire search string.\nconst lyricMatchScore = 500;\n\n// We want lyric token matches to help distinguish between songs, but not\n// override any title/author token matches, so we pick a very low number here.\nconst lyricTokenMatchScore = 1;\n\n/**\n * Returns a number based on how well the song matches the search string.\n *\n * Notes:\n * This has to be fast. Optimimzations may include some kind of predefined lookup dictionary,\n * or storing past searches.\n */\nfunction getMatchScore(song: Song, searchString: string): number {\n  let matchScore = 0;\n\n  const search = normalize(searchString);\n  const searchTokens = tokenize(search);\n\n  const title = normalize(song.title);\n  const titleTokens = tokenize(title);\n\n  const author = normalize(song.author);\n  const authorTokens = tokenize(author);\n\n  // Check matches in title\n  if (title.includes(search)) {\n    matchScore += titleMatchScore;\n  } else {\n    for (const word of titleTokens) {\n      for (const searchTerm of searchTokens) {\n        if (getSimilarity(word, searchTerm) > similarityThreshold) {\n          matchScore += titleTokenMatchScore;\n        }\n      }\n    }\n  }\n\n  // Check matches in author\n  if (author.includes(search)) {\n    matchScore += authorMatchScore;\n  } else {\n    for (const word of authorTokens) {\n      for (const searchTerm of searchTokens) {\n        if (getSimilarity(word, searchTerm) > similarityThreshold) {\n          matchScore += authorTokenMatchScore;\n        }\n      }\n    }\n  }\n\n  // Populate local client-side caches if they are empty.\n  if (!normalizedLyrics.has(song.songNumber)) {\n    normalizedLyrics.set(\n      song.songNumber,\n      Object.values(song.lyrics)\n        .map((s) => normalize(String(s)))\n        .join(\" \") as string\n    );\n  }\n\n  if (!tokenizedLyrics.has(song.songNumber)) {\n    tokenizedLyrics.set(song.songNumber, tokenize(normalizedLyrics.get(song.songNumber) as string));\n  }\n\n  // Check matches in lyrics\n  if ((normalizedLyrics.get(song.songNumber) as string).includes(search)) {\n    matchScore += lyricMatchScore;\n  } else {\n    for (const word of tokenizedLyrics.get(song.songNumber) as string[]) {\n      for (const searchTerm of searchTokens) {\n        if (getSimilarity(word, searchTerm) > similarityThreshold) {\n          matchScore += lyricTokenMatchScore;\n        }\n      }\n    }\n  }\n\n  return matchScore;\n}\n","import { IonContent, IonPage, IonHeader, IonInput, IonItem } from \"@ionic/react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useEffect, useState } from \"react\";\nimport SearchView from \"../components/SearchView\";\nimport { useHistory } from \"react-router-dom\";\nimport { Song } from \"../utils/SongUtils\";\nimport { listSongs } from \"../service/SongsService\";\n\n/**\n * Book Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst BookPage: React.FC = () => {\n  // the search string inputted by the user\n  const [searchString, setSearchString] = useState<string>(\"\");\n  const [songs, setSongs] = useState<Song[]>([]);\n\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      listSongs(searchString).then((songs) => {\n        setSongs(songs);\n      });\n    }, 200);\n    return () => clearTimeout(timeOutId);\n  }, [searchString]);\n\n  const history = useHistory();\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar backButtonOnClick={() => history.push(\"/\")} />\n      </IonHeader>\n      <IonItem>\n        <IonInput\n          id=\"searchBar\"\n          type=\"search\"\n          value={searchString}\n          placeholder=\"Search for a song\"\n          onIonChange={(word) => setSearchString(word.detail.value as string)}\n        ></IonInput>\n      </IonItem>\n      {/* The key here will trigger a re-initialization of a new searchView when it changes. */}\n      <IonContent>\n        <SearchView key={searchString + songs.length} songs={songs} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default BookPage;\n","import ReactGA from \"react-ga\";\n\nconst StreamID = \"UA-183902236-1\";\n\nexport const initGA = (): void => {\n  ReactGA.initialize(StreamID);\n};\n\nexport const PageView = (): void => {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n  console.debug(\"Page viewed\");\n};\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category\n * @param {string} action\n * @param {string} label\n */\n\nexport const Event = (category: string, action: string, label: string): void => {\n  ReactGA.event({\n    category: category,\n    action: action,\n    label: label,\n  });\n};\n","import { SongViewMode } from \"../utils/SongUtils\";\nimport { Event } from \"./GoogleAnalytics\";\n\nexport function triggerSongView(songNumber: number, mode: SongViewMode): void {\n  try {\n    Event(\"INTERACTION\", `Song viewed(${SongViewMode[mode]})`, songNumber.toString());\n    console.debug(`Song number: ${String(songNumber)} viewed in ${SongViewMode[mode]} mode`);\n  } catch (e) {\n    console.error(e);\n  }\n}\n","import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonCardTitle,\n  IonText,\n  IonCardSubtitle,\n} from \"@ionic/react\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { PLACEHOLDER_SONG, Song, SongViewMode } from \"../utils/SongUtils\";\nimport \"./Components.css\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\nimport { getSong } from \"../service/SongsService\";\n\ninterface LyricViewProps {\n  songNumber: number;\n}\n\n/**\n * Lyric Viewer React Functional Component.\n */\nconst LyricView: React.FC<LyricViewProps> = (props: LyricViewProps) => {\n  const [song, setSong] = useState<Song>(PLACEHOLDER_SONG);\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Lyrics);\n    getSong(props.songNumber).then((song) => {\n      setSong(song);\n    });\n  }, []);\n\n  return (\n    <IonGrid>\n      <IonRow class=\"ion-justify-content-center\">\n        <IonCol size=\"12\" size-lg=\"8\" size-xl=\"6\">\n          <IonCard id=\"lyricViewCard\" className=\"ion-padding\">\n            <IonCardHeader className=\"ion-text-center\">\n              <IonCardTitle key=\"title\">{song?.title}</IonCardTitle>\n              <IonCardSubtitle key=\"author\">By {song?.author}</IonCardSubtitle>\n            </IonCardHeader>\n            <IonCardContent key=\"lyrics\">{song ? getLyrics(song) : song}</IonCardContent>\n          </IonCard>\n        </IonCol>\n      </IonRow>\n    </IonGrid>\n  );\n\n  /**\n   * Parses all verse of the song to a list of JSX elements.\n   */\n  function getLyrics(song: Song): JSX.Element[] {\n    const lyrics: JSX.Element[] = [];\n    let key = 0;\n\n    const songLyrics = song.lyrics;\n    const verseKeys = Object.keys(songLyrics);\n    const lyricBlocks: string[][] = Object.values(songLyrics);\n\n    for (let i = 0; i < verseKeys.length; ++i) {\n      const verseKey = verseKeys[i];\n      const verseLyrics = lyricBlocks[i];\n\n      lyrics.push(\n        <Fragment key={key++}>\n          <div className=\"ion-margin-vertical\"></div>\n        </Fragment>\n      );\n      lyrics.push(\n        <h5 key={key++} className=\"ion-margin-top\">\n          {getVerseText(verseKey)}\n        </h5>\n      );\n      verseLyrics.forEach((line: string) => {\n        lyrics.push(\n          <IonText key={key++} className=\"lyricVerse\" color=\"dark\">\n            <p>{line}</p>\n          </IonText>\n        );\n      });\n    }\n    return lyrics;\n  }\n\n  function getVerseText(verse: string) {\n    return verse\n      .toLowerCase()\n      .replace(\"v\", \"Verse \")\n      .replace(\"c\", \"Chorus \")\n      .replace(\"b\", \"Bridge \")\n      .replace(\"p\", \"Pre-Chorus \");\n  }\n};\n\nexport default LyricView;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Components.css\";\nimport { makeThreeDigits, SongViewMode } from \"../utils/SongUtils\";\nimport { IonToggle } from \"@ionic/react\";\nimport { isBrowser } from \"../utils/PlatformUtils\";\n//Import Event tracking\nimport { triggerSongView } from \"../tracking/EventFunctions\";\n\nconst baseUrl = \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/images/\";\nconst hymnalPart = \"shl/SHL_\"; // This part can change when red book is added\nconst imageSuffix = \".png\";\nconst alt = \"No Song Found\";\n\nconst songsWithTwoTunes = [156, 216, 278, 478];\n\n// Props are kind of like the parameters for the constructor of this class.\ninterface MusicViewProps {\n  songNumber: number;\n}\n\n/**\n * Song Viewer React Functional Component.\n */\nconst MusicView: React.FC<MusicViewProps> = (props: MusicViewProps) => {\n  const widthPixels = isBrowser() ? window.innerWidth / 2 : window.innerWidth;\n  const [secondTune, setSecondTune] = useState<boolean>(false);\n  const [width, setWidth] = useState<number>(widthPixels);\n  const [zoomed, setZoomed] = useState<boolean>(false);\n\n  const songHasTwoTunes = songsWithTwoTunes.includes(props.songNumber);\n\n  const secondTuneSuffix = songHasTwoTunes && secondTune ? \"-B\" : \"\";\n\n  const url = baseUrl + hymnalPart + makeThreeDigits(props.songNumber) + secondTuneSuffix + imageSuffix;\n\n  useEffect(() => {\n    triggerSongView(props.songNumber, SongViewMode.Music);\n  }, [props.songNumber]);\n\n  // TODO: Add Pinch and Zoom to image.\n  return (\n    <div>\n      {/* Second Tune Toggler  */}\n      {songHasTwoTunes && (\n        <div id=\"songToggler\">\n          <IonToggle checked={secondTune} onIonChange={() => setSecondTune(!secondTune)} />\n        </div>\n      )}\n\n      {/* image */}\n      {/* <TransformWrapper>\n        <TransformComponent> */}\n      <img\n        style={{ width: width }}\n        id=\"musicView\"\n        onDoubleClick={() => {\n          if (zoomed) {\n            setWidth(widthPixels);\n          } else setWidth(widthPixels * 2);\n          setZoomed(!zoomed);\n        }}\n        src={url}\n        alt={alt}\n      />\n      {/* </TransformComponent>\n      </TransformWrapper> */}\n    </div>\n  );\n};\n\nexport default MusicView;\n","import { getPlatforms, isPlatform } from \"@ionic/react\";\n\n/**\n * Platform Utils:\n *\n * Android: Current platforms: android,cordova,capacitor,mobile,hybrid\n * iOS:\n * Chrome Mobile Mode: Current platforms: android,tablet,mobile,mobileweb\n * Chrome Regular Desktop: Current platforms: desktop\n */\n\n/**\n * Returns true if this is app currently running on an iOS device.\n */\nexport function isIOS(): boolean {\n  return isPlatform(\"ios\");\n}\n\n/**\n * Returns true if this app is currently running on an Android device.\n */\nexport function isAndroid(): boolean {\n  return isPlatform(\"android\");\n}\n\n/**\n * Returns true if this app is currently running on the desktop.\n */\nexport function isBrowser(): boolean {\n  return isPlatform(\"desktop\");\n}\n\n/**\n * Returns true if the platform supports Cordova.\n *\n * * SQLite requires Cordova.\n */\nexport function isCordova(): boolean {\n  return isPlatform(\"cordova\");\n}\n\nexport function logPlatforms(): void {\n  console.debug(\"Current platforms: \" + getPlatforms());\n}\n","import { IonContent, IonPage, IonHeader } from \"@ionic/react\";\nimport { SongViewMode } from \"../utils/SongUtils\";\nimport LyricView from \"../components/LyricView\";\nimport MusicView from \"../components/MusicView\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n//Import Event tracking\nimport { Event } from \"../tracking/GoogleAnalytics\";\n\n/**\n * Song Page Component.\n *\n * Use 'useState' for dynamic variables.\n * When the variable changes, the places where it's being used are automatically re-rendered.\n */\nconst SongPage: React.FC = () => {\n  const { bookId, songId } = useParams<{ bookId: string; songId: string }>();\n  const history = useHistory();\n\n  // when in song view, use music view or lyrics view\n  const [songViewMode, setSongViewMode] = useState<SongViewMode>(SongViewMode.Music);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <NavigationBar\n          backButtonOnClick={() => {\n            history.push(`/${bookId}`);\n          }}\n          toggleSongModeOnClick={ToggleSongMode}\n        />\n      </IonHeader>\n\n      <IonContent>\n        {/* TODO: Add error handling in case of non number song Id */}\n        {RenderSong(+songId)}\n      </IonContent>\n    </IonPage>\n  );\n\n  function RenderSong(songNumber: number) {\n    if (songViewMode === SongViewMode.Music) {\n      return <MusicView songNumber={songNumber} />;\n    } else {\n      return <LyricView songNumber={songNumber} />;\n    }\n  }\n\n  function ToggleSongMode() {\n    if (songViewMode === SongViewMode.Music) {\n      setSongViewMode(SongViewMode.Lyrics);\n    } else {\n      setSongViewMode(SongViewMode.Music);\n    }\n    try {\n      Event(\"INTERACTION\", \"Songmode is toggled\", \"SongMode_Toggle\");\n    } catch (e) {\n      console.error(e);\n    }\n  }\n};\n\nexport default SongPage;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\nimport HomePage from \"./pages/HomePage\";\nimport BookPage from \"./pages/BookPage\";\nimport SongPage from \"./pages/SongPage\";\nimport { initGA, PageView } from \"./tracking/GoogleAnalytics\";\nimport { logPlatforms } from \"./utils/PlatformUtils\";\n\ntry {\n  initGA();\n  PageView();\n} catch (e) {\n  console.error(e);\n}\n\nexport const AppName = \"Songs and Hymns of Life\";\n\nconst App: React.FC = () => {\n  logPlatforms();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/:bookId\" component={BookPage} exact />\n        <Route path=\"/:bookId/:songId\" component={SongPage} exact />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t120,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t121,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t122,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t123,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t124,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t125,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t126,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t127,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t128,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t129,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t130,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t131,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t132,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t133,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t134,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t135,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t136,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t137,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t138,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t139,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t140,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t141,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t142,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t143,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t144,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t145,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t146,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t147,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t148,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t149,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t150,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t151,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t152,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t153,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t154,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t155,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t156,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t157,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t158,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t159,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t160,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t161,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t162,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 82;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t163,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 84;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}